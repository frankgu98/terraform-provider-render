// Package client provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package client

import (
	"encoding/json"
	"time"

	"github.com/oapi-codegen/runtime"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for AutoDeploy.
const (
	AutoDeployNo  AutoDeploy = "no"
	AutoDeployYes AutoDeploy = "yes"
)

// Defines values for BackgroundWorkerDetailsPATCHPullRequestPreviewsEnabled.
const (
	BackgroundWorkerDetailsPATCHPullRequestPreviewsEnabledNo  BackgroundWorkerDetailsPATCHPullRequestPreviewsEnabled = "no"
	BackgroundWorkerDetailsPATCHPullRequestPreviewsEnabledYes BackgroundWorkerDetailsPATCHPullRequestPreviewsEnabled = "yes"
)

// Defines values for BackgroundWorkerDetailsPOSTPullRequestPreviewsEnabled.
const (
	BackgroundWorkerDetailsPOSTPullRequestPreviewsEnabledNo  BackgroundWorkerDetailsPOSTPullRequestPreviewsEnabled = "no"
	BackgroundWorkerDetailsPOSTPullRequestPreviewsEnabledYes BackgroundWorkerDetailsPOSTPullRequestPreviewsEnabled = "yes"
)

// Defines values for BuildPlan.
const (
	BuildPlanPerformance BuildPlan = "performance"
	BuildPlanStarter     BuildPlan = "starter"
)

// Defines values for CustomDomainDomainType.
const (
	CustomDomainDomainTypeApex      CustomDomainDomainType = "apex"
	CustomDomainDomainTypeSubdomain CustomDomainDomainType = "subdomain"
)

// Defines values for CustomDomainVerificationStatus.
const (
	CustomDomainVerificationStatusUnverified CustomDomainVerificationStatus = "unverified"
	CustomDomainVerificationStatusVerified   CustomDomainVerificationStatus = "verified"
)

// Defines values for DatabaseRole.
const (
	Primary DatabaseRole = "primary"
	Replica DatabaseRole = "replica"
)

// Defines values for DatabaseStatus.
const (
	DatabaseStatusAvailable             DatabaseStatus = "available"
	DatabaseStatusConfigRestart         DatabaseStatus = "config_restart"
	DatabaseStatusCreating              DatabaseStatus = "creating"
	DatabaseStatusMaintenanceInProgress DatabaseStatus = "maintenance_in_progress"
	DatabaseStatusMaintenanceScheduled  DatabaseStatus = "maintenance_scheduled"
	DatabaseStatusRecoveryFailed        DatabaseStatus = "recovery_failed"
	DatabaseStatusRecoveryInProgress    DatabaseStatus = "recovery_in_progress"
	DatabaseStatusSuspended             DatabaseStatus = "suspended"
	DatabaseStatusUnavailable           DatabaseStatus = "unavailable"
	DatabaseStatusUnknown               DatabaseStatus = "unknown"
	DatabaseStatusUpdatingInstance      DatabaseStatus = "updating_instance"
)

// Defines values for DeployStatus.
const (
	BuildFailed         DeployStatus = "build_failed"
	BuildInProgress     DeployStatus = "build_in_progress"
	Canceled            DeployStatus = "canceled"
	Created             DeployStatus = "created"
	Deactivated         DeployStatus = "deactivated"
	Live                DeployStatus = "live"
	PreDeployFailed     DeployStatus = "pre_deploy_failed"
	PreDeployInProgress DeployStatus = "pre_deploy_in_progress"
	UpdateFailed        DeployStatus = "update_failed"
	UpdateInProgress    DeployStatus = "update_in_progress"
)

// Defines values for DeployTrigger.
const (
	Api              DeployTrigger = "api"
	BlueprintSync    DeployTrigger = "blueprint_sync"
	DeployHook       DeployTrigger = "deploy_hook"
	DeployedByRender DeployTrigger = "deployed_by_render"
	Manual           DeployTrigger = "manual"
	NewCommit        DeployTrigger = "new_commit"
	Other            DeployTrigger = "other"
	Rollback         DeployTrigger = "rollback"
	ServiceResumed   DeployTrigger = "service_resumed"
	ServiceUpdated   DeployTrigger = "service_updated"
)

// Defines values for FilterApplicationValuesCollectionFilter.
const (
	Instance FilterApplicationValuesCollectionFilter = "instance"
)

// Defines values for FilterHTTPValuesCollectionFilter.
const (
	FilterHTTPValuesCollectionFilterHost       FilterHTTPValuesCollectionFilter = "host"
	FilterHTTPValuesCollectionFilterStatusCode FilterHTTPValuesCollectionFilter = "statusCode"
)

// Defines values for MaintenanceState.
const (
	MaintenanceStateCancelled       MaintenanceState = "cancelled"
	MaintenanceStateFailed          MaintenanceState = "failed"
	MaintenanceStateInProgress      MaintenanceState = "in_progress"
	MaintenanceStateNotified        MaintenanceState = "notified"
	MaintenanceStateScheduled       MaintenanceState = "scheduled"
	MaintenanceStateSucceeded       MaintenanceState = "succeeded"
	MaintenanceStateUserFixRequired MaintenanceState = "user_fix_required"
)

// Defines values for MaxmemoryPolicy.
const (
	AllkeysLfu     MaxmemoryPolicy = "allkeys_lfu"
	AllkeysLru     MaxmemoryPolicy = "allkeys_lru"
	AllkeysRandom  MaxmemoryPolicy = "allkeys_random"
	Noeviction     MaxmemoryPolicy = "noeviction"
	VolatileLfu    MaxmemoryPolicy = "volatile_lfu"
	VolatileLru    MaxmemoryPolicy = "volatile_lru"
	VolatileRandom MaxmemoryPolicy = "volatile_random"
	VolatileTtl    MaxmemoryPolicy = "volatile_ttl"
)

// Defines values for NotificationOverrideType.
const (
	NotificationOverrideTypeService NotificationOverrideType = "service"
)

// Defines values for NotifyOverride.
const (
	NotifyOverrideAll     NotifyOverride = "all"
	NotifyOverrideDefault NotifyOverride = "default"
	NotifyOverrideFailure NotifyOverride = "failure"
	NotifyOverrideNone    NotifyOverride = "none"
)

// Defines values for NotifyPreviewOverride.
const (
	NotifyPreviewOverrideDefault NotifyPreviewOverride = "default"
	NotifyPreviewOverrideFalse   NotifyPreviewOverride = "false"
	NotifyPreviewOverrideTrue    NotifyPreviewOverride = "true"
)

// Defines values for NotifySetting.
const (
	Default NotifySetting = "default"
	Ignore  NotifySetting = "ignore"
	Notify  NotifySetting = "notify"
)

// Defines values for NotifySettingV2.
const (
	All     NotifySettingV2 = "all"
	Failure NotifySettingV2 = "failure"
	None    NotifySettingV2 = "none"
)

// Defines values for OwnerType.
const (
	OwnerTypeTeam OwnerType = "team"
	OwnerTypeUser OwnerType = "user"
)

// Defines values for PaidPlan.
const (
	PaidPlanPro      PaidPlan = "pro"
	PaidPlanProMax   PaidPlan = "pro_max"
	PaidPlanProPlus  PaidPlan = "pro_plus"
	PaidPlanProUltra PaidPlan = "pro_ultra"
	PaidPlanStandard PaidPlan = "standard"
	PaidPlanStarter  PaidPlan = "starter"
)

// Defines values for Plan.
const (
	PlanCustom       Plan = "custom"
	PlanFree         Plan = "free"
	PlanPro          Plan = "pro"
	PlanProMax       Plan = "pro_max"
	PlanProPlus      Plan = "pro_plus"
	PlanProUltra     Plan = "pro_ultra"
	PlanStandard     Plan = "standard"
	PlanStandardPlus Plan = "standard_plus"
	PlanStarter      Plan = "starter"
	PlanStarterPlus  Plan = "starter_plus"
)

// Defines values for PostgresSuspended.
const (
	PostgresSuspendedNotSuspended PostgresSuspended = "not_suspended"
	PostgresSuspendedSuspended    PostgresSuspended = "suspended"
)

// Defines values for PostgresPlans.
const (
	PostgresPlansCustom   PostgresPlans = "custom"
	PostgresPlansFree     PostgresPlans = "free"
	PostgresPlansPro      PostgresPlans = "pro"
	PostgresPlansProPlus  PostgresPlans = "pro_plus"
	PostgresPlansStandard PostgresPlans = "standard"
	PostgresPlansStarter  PostgresPlans = "starter"
)

// Defines values for PostgresVersion.
const (
	N11 PostgresVersion = "11"
	N12 PostgresVersion = "12"
	N13 PostgresVersion = "13"
	N14 PostgresVersion = "14"
	N15 PostgresVersion = "15"
	N16 PostgresVersion = "16"
)

// Defines values for PrivateServiceDetailsPATCHPullRequestPreviewsEnabled.
const (
	PrivateServiceDetailsPATCHPullRequestPreviewsEnabledNo  PrivateServiceDetailsPATCHPullRequestPreviewsEnabled = "no"
	PrivateServiceDetailsPATCHPullRequestPreviewsEnabledYes PrivateServiceDetailsPATCHPullRequestPreviewsEnabled = "yes"
)

// Defines values for PrivateServiceDetailsPOSTPullRequestPreviewsEnabled.
const (
	PrivateServiceDetailsPOSTPullRequestPreviewsEnabledNo  PrivateServiceDetailsPOSTPullRequestPreviewsEnabled = "no"
	PrivateServiceDetailsPOSTPullRequestPreviewsEnabledYes PrivateServiceDetailsPOSTPullRequestPreviewsEnabled = "yes"
)

// Defines values for ProtectedStatus.
const (
	Protected   ProtectedStatus = "protected"
	Unprotected ProtectedStatus = "unprotected"
)

// Defines values for PullRequestPreviewsEnabled.
const (
	PullRequestPreviewsEnabledNo  PullRequestPreviewsEnabled = "no"
	PullRequestPreviewsEnabledYes PullRequestPreviewsEnabled = "yes"
)

// Defines values for RedisPlan.
const (
	Custom   RedisPlan = "custom"
	Free     RedisPlan = "free"
	Pro      RedisPlan = "pro"
	ProPlus  RedisPlan = "pro_plus"
	Standard RedisPlan = "standard"
	Starter  RedisPlan = "starter"
)

// Defines values for Region.
const (
	Frankfurt Region = "frankfurt"
	Ohio      Region = "ohio"
	Oregon    Region = "oregon"
	Singapore Region = "singapore"
)

// Defines values for RegistryCredentialRegistry.
const (
	RegistryCredentialRegistryDOCKER RegistryCredentialRegistry = "DOCKER"
	RegistryCredentialRegistryGITHUB RegistryCredentialRegistry = "GITHUB"
	RegistryCredentialRegistryGITLAB RegistryCredentialRegistry = "GITLAB"
)

// Defines values for RouteType.
const (
	RouteTypeRedirect RouteType = "redirect"
	RouteTypeRewrite  RouteType = "rewrite"
)

// Defines values for ServerPortProtocol.
const (
	TCP ServerPortProtocol = "TCP"
	UDP ServerPortProtocol = "UDP"
)

// Defines values for ServiceSuspended.
const (
	ServiceSuspendedNotSuspended ServiceSuspended = "not_suspended"
	ServiceSuspendedSuspended    ServiceSuspended = "suspended"
)

// Defines values for ServiceEnv.
const (
	ServiceEnvDocker ServiceEnv = "docker"
	ServiceEnvElixir ServiceEnv = "elixir"
	ServiceEnvGo     ServiceEnv = "go"
	ServiceEnvImage  ServiceEnv = "image"
	ServiceEnvNode   ServiceEnv = "node"
	ServiceEnvPython ServiceEnv = "python"
	ServiceEnvRuby   ServiceEnv = "ruby"
	ServiceEnvRust   ServiceEnv = "rust"
)

// Defines values for ServiceType.
const (
	BackgroundWorker ServiceType = "background_worker"
	CronJob          ServiceType = "cron_job"
	PrivateService   ServiceType = "private_service"
	StaticSite       ServiceType = "static_site"
	WebService       ServiceType = "web_service"
)

// Defines values for ServiceTypeShort.
const (
	Cron   ServiceTypeShort = "cron"
	Pserv  ServiceTypeShort = "pserv"
	Static ServiceTypeShort = "static"
	Web    ServiceTypeShort = "web"
	Worker ServiceTypeShort = "worker"
)

// Defines values for StaticSiteDetailsPATCHPullRequestPreviewsEnabled.
const (
	StaticSiteDetailsPATCHPullRequestPreviewsEnabledNo  StaticSiteDetailsPATCHPullRequestPreviewsEnabled = "no"
	StaticSiteDetailsPATCHPullRequestPreviewsEnabledYes StaticSiteDetailsPATCHPullRequestPreviewsEnabled = "yes"
)

// Defines values for StaticSiteDetailsPOSTPullRequestPreviewsEnabled.
const (
	StaticSiteDetailsPOSTPullRequestPreviewsEnabledNo  StaticSiteDetailsPOSTPullRequestPreviewsEnabled = "no"
	StaticSiteDetailsPOSTPullRequestPreviewsEnabledYes StaticSiteDetailsPOSTPullRequestPreviewsEnabled = "yes"
)

// Defines values for SuspenderType.
const (
	SuspenderTypeAdmin         SuspenderType = "admin"
	SuspenderTypeBilling       SuspenderType = "billing"
	SuspenderTypeParentService SuspenderType = "parent_service"
	SuspenderTypeUnknown       SuspenderType = "unknown"
	SuspenderTypeUser          SuspenderType = "user"
)

// Defines values for WebServiceDetailsPATCHPullRequestPreviewsEnabled.
const (
	WebServiceDetailsPATCHPullRequestPreviewsEnabledNo  WebServiceDetailsPATCHPullRequestPreviewsEnabled = "no"
	WebServiceDetailsPATCHPullRequestPreviewsEnabledYes WebServiceDetailsPATCHPullRequestPreviewsEnabled = "yes"
)

// Defines values for WebServiceDetailsPOSTPullRequestPreviewsEnabled.
const (
	WebServiceDetailsPOSTPullRequestPreviewsEnabledNo  WebServiceDetailsPOSTPullRequestPreviewsEnabled = "no"
	WebServiceDetailsPOSTPullRequestPreviewsEnabledYes WebServiceDetailsPOSTPullRequestPreviewsEnabled = "yes"
)

// Defines values for ApplicationMetricAggregationMethod.
const (
	AVG ApplicationMetricAggregationMethod = "AVG"
	MAX ApplicationMetricAggregationMethod = "MAX"
	MIN ApplicationMetricAggregationMethod = "MIN"
)

// Defines values for HttpAggregateBy.
const (
	HttpAggregateByHost       HttpAggregateBy = "host"
	HttpAggregateByStatusCode HttpAggregateBy = "statusCode"
)

// Defines values for ListPostgresParamsSuspended.
const (
	ListPostgresParamsSuspendedNotSuspended ListPostgresParamsSuspended = "not_suspended"
	ListPostgresParamsSuspendedSuspended    ListPostgresParamsSuspended = "suspended"
)

// Defines values for GetRegistryCredentialsParamsType.
const (
	GetRegistryCredentialsParamsTypeDOCKER         GetRegistryCredentialsParamsType = "DOCKER"
	GetRegistryCredentialsParamsTypeGITHUB         GetRegistryCredentialsParamsType = "GITHUB"
	GetRegistryCredentialsParamsTypeGITLAB         GetRegistryCredentialsParamsType = "GITLAB"
	GetRegistryCredentialsParamsTypeGOOGLEARTIFACT GetRegistryCredentialsParamsType = "GOOGLE_ARTIFACT"
)

// Defines values for CreateRegistryCredentialJSONBodyRegistry.
const (
	CreateRegistryCredentialJSONBodyRegistryDOCKER CreateRegistryCredentialJSONBodyRegistry = "DOCKER"
	CreateRegistryCredentialJSONBodyRegistryGITHUB CreateRegistryCredentialJSONBodyRegistry = "GITHUB"
	CreateRegistryCredentialJSONBodyRegistryGITLAB CreateRegistryCredentialJSONBodyRegistry = "GITLAB"
)

// Defines values for UpdateRegistryCredentialJSONBodyRegistry.
const (
	UpdateRegistryCredentialJSONBodyRegistryDOCKER UpdateRegistryCredentialJSONBodyRegistry = "DOCKER"
	UpdateRegistryCredentialJSONBodyRegistryGITHUB UpdateRegistryCredentialJSONBodyRegistry = "GITHUB"
	UpdateRegistryCredentialJSONBodyRegistryGITLAB UpdateRegistryCredentialJSONBodyRegistry = "GITLAB"
)

// Defines values for GetServicesParamsSuspended.
const (
	NotSuspended GetServicesParamsSuspended = "not_suspended"
	Suspended    GetServicesParamsSuspended = "suspended"
)

// Defines values for GetCustomDomainsParamsDomainType.
const (
	GetCustomDomainsParamsDomainTypeApex      GetCustomDomainsParamsDomainType = "apex"
	GetCustomDomainsParamsDomainTypeSubdomain GetCustomDomainsParamsDomainType = "subdomain"
)

// Defines values for GetCustomDomainsParamsVerificationStatus.
const (
	GetCustomDomainsParamsVerificationStatusUnverified GetCustomDomainsParamsVerificationStatus = "unverified"
	GetCustomDomainsParamsVerificationStatusVerified   GetCustomDomainsParamsVerificationStatus = "verified"
)

// Defines values for CreateDeployJSONBodyClearCache.
const (
	Clear      CreateDeployJSONBodyClearCache = "clear"
	DoNotClear CreateDeployJSONBodyClearCache = "do_not_clear"
)

// Defines values for ListJobParamsStatus.
const (
	ListJobParamsStatusFailed    ListJobParamsStatus = "failed"
	ListJobParamsStatusPending   ListJobParamsStatus = "pending"
	ListJobParamsStatusRunning   ListJobParamsStatus = "running"
	ListJobParamsStatusSucceeded ListJobParamsStatus = "succeeded"
)

// Defines values for RetrieveRoutesParamsType.
const (
	RetrieveRoutesParamsTypeRedirect RetrieveRoutesParamsType = "redirect"
	RetrieveRoutesParamsTypeRewrite  RetrieveRoutesParamsType = "rewrite"
)

// AddUpdateEnvVarInput defines model for addUpdateEnvVarInput.
type AddUpdateEnvVarInput struct {
	union json.RawMessage
}

// AutoDeploy defines model for autoDeploy.
type AutoDeploy string

// AutoscalingConfig defines model for autoscalingConfig.
type AutoscalingConfig struct {
	Criteria AutoscalingCriteria `json:"criteria"`
	Enabled  bool                `json:"enabled"`

	// Max The maximum number of instances for the service
	Max int `json:"max"`

	// Min The minimum number of instances for the service
	Min int `json:"min"`
}

// AutoscalingCriteria defines model for autoscalingCriteria.
type AutoscalingCriteria struct {
	Cpu    AutoscalingCriteriaPercentage `json:"cpu"`
	Memory AutoscalingCriteriaPercentage `json:"memory"`
}

// AutoscalingCriteriaPercentage defines model for autoscalingCriteriaPercentage.
type AutoscalingCriteriaPercentage struct {
	Enabled bool `json:"enabled"`

	// Percentage Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.
	Percentage int `json:"percentage"`
}

// BackgroundWorkerDetails defines model for backgroundWorkerDetails.
type BackgroundWorkerDetails struct {
	Autoscaling *AutoscalingConfig `json:"autoscaling,omitempty"`
	BuildPlan   BuildPlan          `json:"buildPlan"`
	Disk        *Disk              `json:"disk,omitempty"`

	// Env Environment (runtime)
	Env                ServiceEnv         `json:"env"`
	EnvSpecificDetails EnvSpecificDetails `json:"envSpecificDetails"`

	// NumInstances For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
	NumInstances int       `json:"numInstances"`
	ParentServer *Resource `json:"parentServer,omitempty"`

	// Plan The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan                       Plan                       `json:"plan"`
	PullRequestPreviewsEnabled PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled"`

	// Region Defaults to "oregon"
	Region Region `json:"region"`
}

// BackgroundWorkerDetailsPATCH defines model for backgroundWorkerDetailsPATCH.
type BackgroundWorkerDetailsPATCH struct {
	EnvSpecificDetails *EnvSpecificDetailsPATCH `json:"envSpecificDetails,omitempty"`

	// Plan Defaults to "starter"
	Plan                       *PaidPlan                                               `json:"plan,omitempty"`
	PreDeployCommand           *string                                                 `json:"preDeployCommand,omitempty"`
	PullRequestPreviewsEnabled *BackgroundWorkerDetailsPATCHPullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Runtime Environment (runtime)
	Runtime *ServiceEnv `json:"runtime,omitempty"`
}

// BackgroundWorkerDetailsPATCHPullRequestPreviewsEnabled defines model for BackgroundWorkerDetailsPATCH.PullRequestPreviewsEnabled.
type BackgroundWorkerDetailsPATCHPullRequestPreviewsEnabled string

// BackgroundWorkerDetailsPOST defines model for backgroundWorkerDetailsPOST.
type BackgroundWorkerDetailsPOST struct {
	Autoscaling *AutoscalingConfig `json:"autoscaling,omitempty"`
	Disk        *ServiceDisk       `json:"disk,omitempty"`

	// Env Environment (runtime)
	Env                ServiceEnv              `json:"env"`
	EnvSpecificDetails *EnvSpecificDetailsPOST `json:"envSpecificDetails,omitempty"`

	// NumInstances Defaults to 1
	NumInstances *int `json:"numInstances,omitempty"`

	// Plan Defaults to "starter"
	Plan             *PaidPlan `json:"plan,omitempty"`
	PreDeployCommand *string   `json:"preDeployCommand,omitempty"`

	// PullRequestPreviewsEnabled Defaults to "no"
	PullRequestPreviewsEnabled *BackgroundWorkerDetailsPOSTPullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Region Defaults to "oregon"
	Region *Region `json:"region,omitempty"`
}

// BackgroundWorkerDetailsPOSTPullRequestPreviewsEnabled Defaults to "no"
type BackgroundWorkerDetailsPOSTPullRequestPreviewsEnabled string

// BuildFilter defines model for buildFilter.
type BuildFilter struct {
	IgnoredPaths []string `json:"ignoredPaths"`
	Paths        []string `json:"paths"`
}

// BuildPlan defines model for buildPlan.
type BuildPlan string

// CidrBlockAndDescription defines model for cidrBlockAndDescription.
type CidrBlockAndDescription struct {
	CidrBlock string `json:"cidrBlock"`

	// Description User-provided description of the CIDR block
	Description string `json:"description"`
}

// CronJobDetails defines model for cronJobDetails.
type CronJobDetails struct {
	BuildPlan BuildPlan `json:"buildPlan"`

	// Env Environment (runtime)
	Env                 ServiceEnv         `json:"env"`
	EnvSpecificDetails  EnvSpecificDetails `json:"envSpecificDetails"`
	LastSuccessfulRunAt *time.Time         `json:"lastSuccessfulRunAt,omitempty"`

	// Plan The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan Plan `json:"plan"`

	// Region Defaults to "oregon"
	Region   Region `json:"region"`
	Schedule string `json:"schedule"`
}

// CronJobDetailsPATCH defines model for cronJobDetailsPATCH.
type CronJobDetailsPATCH struct {
	EnvSpecificDetails *EnvSpecificDetailsPATCH `json:"envSpecificDetails,omitempty"`

	// Plan Defaults to "starter"
	Plan *PaidPlan `json:"plan,omitempty"`

	// Runtime Environment (runtime)
	Runtime  *ServiceEnv `json:"runtime,omitempty"`
	Schedule *string     `json:"schedule,omitempty"`
}

// CronJobDetailsPOST defines model for cronJobDetailsPOST.
type CronJobDetailsPOST struct {
	// Env Environment (runtime)
	Env                ServiceEnv          `json:"env"`
	EnvSpecificDetails *EnvSpecificDetails `json:"envSpecificDetails,omitempty"`

	// Plan Defaults to "starter"
	Plan *PaidPlan `json:"plan,omitempty"`

	// Region Defaults to "oregon"
	Region   *Region `json:"region,omitempty"`
	Schedule string  `json:"schedule"`
}

// Cursor defines model for cursor.
type Cursor = string

// CustomDomain defines model for customDomain.
type CustomDomain struct {
	CreatedAt       time.Time              `json:"createdAt"`
	DomainType      CustomDomainDomainType `json:"domainType"`
	Id              string                 `json:"id"`
	Name            string                 `json:"name"`
	PublicSuffix    string                 `json:"publicSuffix"`
	RedirectForName string                 `json:"redirectForName"`
	Server          *struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
	} `json:"server,omitempty"`
	VerificationStatus CustomDomainVerificationStatus `json:"verificationStatus"`
}

// CustomDomainDomainType defines model for CustomDomain.DomainType.
type CustomDomainDomainType string

// CustomDomainVerificationStatus defines model for CustomDomain.VerificationStatus.
type CustomDomainVerificationStatus string

// CustomDomainWithCursor defines model for customDomainWithCursor.
type CustomDomainWithCursor struct {
	Cursor       Cursor        `json:"cursor"`
	CustomDomain *CustomDomain `json:"customDomain,omitempty"`
}

// DatabaseRole defines model for databaseRole.
type DatabaseRole string

// DatabaseStatus defines model for databaseStatus.
type DatabaseStatus string

// Deploy defines model for deploy.
type Deploy struct {
	Commit *struct {
		CreatedAt *time.Time `json:"createdAt,omitempty"`
		Id        *string    `json:"id,omitempty"`
		Message   *string    `json:"message,omitempty"`
	} `json:"commit,omitempty"`
	CreatedAt  *time.Time `json:"createdAt,omitempty"`
	FinishedAt *time.Time `json:"finishedAt,omitempty"`
	Id         string     `json:"id"`

	// Image Image information used when creating the deploy. Not present for Git-backed deploys
	Image *struct {
		// Ref Image reference used when creating the deploy
		Ref *string `json:"ref,omitempty"`

		// RegistryCredential Name of credential used to pull the image, if provided
		RegistryCredential *string `json:"registryCredential,omitempty"`

		// Sha SHA that the image reference was resolved to when creating the deploy
		Sha *string `json:"sha,omitempty"`
	} `json:"image,omitempty"`
	Status    *DeployStatus  `json:"status,omitempty"`
	Trigger   *DeployTrigger `json:"trigger,omitempty"`
	UpdatedAt *time.Time     `json:"updatedAt,omitempty"`
}

// DeployStatus defines model for Deploy.Status.
type DeployStatus string

// DeployTrigger defines model for Deploy.Trigger.
type DeployTrigger string

// Disk defines model for disk.
type Disk struct {
	Id        string `json:"id"`
	MountPath string `json:"mountPath"`
	Name      string `json:"name"`
	SizeGB    int    `json:"sizeGB"`
}

// DiskDetails defines model for diskDetails.
type DiskDetails struct {
	CreatedAt time.Time `json:"createdAt"`
	Id        string    `json:"id"`
	MountPath string    `json:"mountPath"`
	Name      string    `json:"name"`
	ServiceId *string   `json:"serviceId,omitempty"`
	SizeGB    int       `json:"sizeGB"`
	UpdatedAt time.Time `json:"updatedAt"`
}

// DiskPATCH defines model for diskPATCH.
type DiskPATCH struct {
	MountPath *string `json:"mountPath,omitempty"`
	Name      *string `json:"name,omitempty"`
	SizeGB    *int    `json:"sizeGB,omitempty"`
}

// DiskPOST defines model for diskPOST.
type DiskPOST struct {
	MountPath string `json:"mountPath"`
	Name      string `json:"name"`
	ServiceId string `json:"serviceId"`
	SizeGB    int    `json:"sizeGB"`
}

// DiskSnapshot defines model for diskSnapshot.
type DiskSnapshot struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// InstanceId When a service with a disk is scaled, the instanceId is used to identify the instance that the disk is attached to. Each instance's disks get their own snapshots, and can be restored separately.
	InstanceId  *InstanceId `json:"instanceId,omitempty"`
	SnapshotKey *string     `json:"snapshotKey,omitempty"`
}

// DiskWithCursor defines model for diskWithCursor.
type DiskWithCursor struct {
	Cursor Cursor      `json:"cursor"`
	Disk   DiskDetails `json:"disk"`
}

// DockerDetails defines model for dockerDetails.
type DockerDetails struct {
	DockerCommand      string              `json:"dockerCommand"`
	DockerContext      string              `json:"dockerContext"`
	DockerfilePath     string              `json:"dockerfilePath"`
	PreDeployCommand   *string             `json:"preDeployCommand,omitempty"`
	RegistryCredential *RegistryCredential `json:"registryCredential,omitempty"`
}

// DockerDetailsPATCH defines model for dockerDetailsPATCH.
type DockerDetailsPATCH struct {
	DockerCommand        *string `json:"dockerCommand,omitempty"`
	DockerContext        *string `json:"dockerContext,omitempty"`
	DockerfilePath       *string `json:"dockerfilePath,omitempty"`
	RegistryCredentialId *string `json:"registryCredentialId,omitempty"`
}

// DockerDetailsPOST defines model for dockerDetailsPOST.
type DockerDetailsPOST struct {
	DockerCommand *string `json:"dockerCommand,omitempty"`
	DockerContext *string `json:"dockerContext,omitempty"`

	// DockerfilePath Defaults to "./Dockerfile"
	DockerfilePath       *string `json:"dockerfilePath,omitempty"`
	RegistryCredentialId *string `json:"registryCredentialId,omitempty"`
}

// EnvGroup defines model for envGroup.
type EnvGroup struct {
	EnvVars       []EnvVar     `json:"envVars"`
	EnvironmentId *string      `json:"environmentId,omitempty"`
	Id            string       `json:"id"`
	Name          string       `json:"name"`
	OwnerId       string       `json:"ownerId"`
	SecretFiles   []SecretFile `json:"secretFiles"`

	// ServiceLinks List of serviceIds linked to the envGroup
	ServiceLinks []ServiceLink `json:"serviceLinks"`
}

// EnvGroupMeta defines model for envGroupMeta.
type EnvGroupMeta struct {
	EnvironmentId *string `json:"environmentId,omitempty"`
	Id            string  `json:"id"`
	Name          string  `json:"name"`
	OwnerId       string  `json:"ownerId"`

	// ServiceLinks List of serviceIds linked to the envGroup
	ServiceLinks []ServiceLink `json:"serviceLinks"`
}

// EnvGroupPATCHInput defines model for envGroupPATCHInput.
type EnvGroupPATCHInput struct {
	Name string `json:"name"`
}

// EnvGroupPOSTInput defines model for envGroupPOSTInput.
type EnvGroupPOSTInput struct {
	EnvVars       EnvVarInputArray   `json:"envVars"`
	EnvironmentId *string            `json:"environmentId,omitempty"`
	Name          string             `json:"name"`
	OwnerId       string             `json:"ownerId"`
	SecretFiles   *[]SecretFileInput `json:"secretFiles,omitempty"`
	ServiceIds    *[]string          `json:"serviceIds,omitempty"`
}

// EnvSpecificDetails defines model for envSpecificDetails.
type EnvSpecificDetails struct {
	union json.RawMessage
}

// EnvSpecificDetailsPATCH defines model for envSpecificDetailsPATCH.
type EnvSpecificDetailsPATCH struct {
	union json.RawMessage
}

// EnvSpecificDetailsPOST defines model for envSpecificDetailsPOST.
type EnvSpecificDetailsPOST struct {
	union json.RawMessage
}

// EnvVar defines model for envVar.
type EnvVar struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// EnvVarGenerateValue defines model for envVarGenerateValue.
type EnvVarGenerateValue struct {
	GenerateValue bool `json:"generateValue"`
}

// EnvVarInput defines model for envVarInput.
type EnvVarInput struct {
	union json.RawMessage
}

// EnvVarInputArray defines model for envVarInputArray.
type EnvVarInputArray = []EnvVarInput

// EnvVarKeyGenerateValue defines model for envVarKeyGenerateValue.
type EnvVarKeyGenerateValue struct {
	GenerateValue bool   `json:"generateValue"`
	Key           string `json:"key"`
}

// EnvVarKeyValue defines model for envVarKeyValue.
type EnvVarKeyValue struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// EnvVarValue defines model for envVarValue.
type EnvVarValue struct {
	Value string `json:"value"`
}

// EnvVarWithCursor defines model for envVarWithCursor.
type EnvVarWithCursor struct {
	Cursor Cursor `json:"cursor"`
	EnvVar EnvVar `json:"envVar"`
}

// Environment defines model for environment.
type Environment struct {
	DatabasesIds []string `json:"databasesIds"`
	EnvGroupIds  []string `json:"envGroupIds"`
	Id           string   `json:"id"`
	Name         string   `json:"name"`
	ProjectId    string   `json:"projectId"`

	// ProtectedStatus Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
	ProtectedStatus ProtectedStatus `json:"protectedStatus"`
	RedisIds        []string        `json:"redisIds"`
	ServiceIds      []string        `json:"serviceIds"`
}

// EnvironmentPATCHInput defines model for environmentPATCHInput.
type EnvironmentPATCHInput struct {
	Name *string `json:"name,omitempty"`

	// ProtectedStatus Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
	ProtectedStatus *ProtectedStatus `json:"protectedStatus,omitempty"`
}

// EnvironmentPOSTInput defines model for environmentPOSTInput.
type EnvironmentPOSTInput struct {
	DatabasesIds *[]string `json:"databasesIds,omitempty"`
	EnvGroupIds  *[]string `json:"envGroupIds,omitempty"`
	Name         string    `json:"name"`
	ProjectId    string    `json:"projectId"`

	// ProtectedStatus Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
	ProtectedStatus *ProtectedStatus `json:"protectedStatus,omitempty"`
	RedisIds        *[]string        `json:"redisIds,omitempty"`
	ServiceIds      *[]string        `json:"serviceIds,omitempty"`
}

// EnvironmentResourcesPOSTInput defines model for environmentResourcesPOSTInput.
type EnvironmentResourcesPOSTInput struct {
	ResourceIds []string `json:"resourceIds"`
}

// EnvironmentWithCursor An environment with a cursor
type EnvironmentWithCursor struct {
	Cursor      Cursor      `json:"cursor"`
	Environment Environment `json:"environment"`
}

// Error defines model for error.
type Error struct {
	Id      *string `json:"id,omitempty"`
	Message *string `json:"message,omitempty"`
}

// FilterApplicationValuesCollection A collection of filter values for application metrics
type FilterApplicationValuesCollection = []struct {
	Filter *FilterApplicationValuesCollectionFilter `json:"filter,omitempty"`
	Values *[]string                                `json:"values,omitempty"`
}

// FilterApplicationValuesCollectionFilter defines model for FilterApplicationValuesCollection.Filter.
type FilterApplicationValuesCollectionFilter string

// FilterHTTPValuesCollection A collection of filter values for HTTP metrics
type FilterHTTPValuesCollection = []struct {
	Filter *FilterHTTPValuesCollectionFilter `json:"filter,omitempty"`
	Values *[]string                         `json:"values,omitempty"`
}

// FilterHTTPValuesCollectionFilter defines model for FilterHTTPValuesCollection.Filter.
type FilterHTTPValuesCollectionFilter string

// FilterPathValuesCollection A collection of suggested paths to filter by
type FilterPathValuesCollection = []string

// Header defines model for header.
type Header struct {
	Id    string `json:"id"`
	Name  string `json:"name"`
	Path  string `json:"path"`
	Value string `json:"value"`
}

// HeaderInput defines model for headerInput.
type HeaderInput struct {
	// Name Header name
	Name string `json:"name"`

	// Path The request path to add the header to. Wildcards will cause headers to be applied to all matching paths.
	Path string `json:"path"`

	// Value Header value
	Value string `json:"value"`
}

// HeaderWithCursor defines model for headerWithCursor.
type HeaderWithCursor struct {
	Cursor string `json:"cursor"`
	Header Header `json:"header"`
}

// Image defines model for image.
type Image struct {
	// ImagePath Path to the image used for this server (e.g docker.io/library/nginx:latest).
	ImagePath string `json:"imagePath"`

	// OwnerId The ID of the owner for this image. This should match the owner of the service as well as the owner of any specified registry credential.
	OwnerId string `json:"ownerId"`

	// RegistryCredentialId Optional reference to the registry credential passed to the image repository to retrieve this image.
	RegistryCredentialId *string `json:"registryCredentialId,omitempty"`
}

// InstanceId When a service with a disk is scaled, the instanceId is used to identify the instance that the disk is attached to. Each instance's disks get their own snapshots, and can be restored separately.
type InstanceId = string

// Job defines model for job.
type Job struct {
	CreatedAt    time.Time  `json:"createdAt"`
	FinishedAt   *time.Time `json:"finishedAt,omitempty"`
	Id           string     `json:"id"`
	PlanId       string     `json:"planId"`
	ServiceId    string     `json:"serviceId"`
	StartCommand string     `json:"startCommand"`
	StartedAt    *time.Time `json:"startedAt,omitempty"`
	Status       *string    `json:"status,omitempty"`
}

// Label A time series datapoint label
type Label struct {
	Field string `json:"field"`
	Value string `json:"value"`
}

// MaintenanceInfo defines model for maintenanceInfo.
type MaintenanceInfo struct {
	Id                   string           `json:"id"`
	PendingMaintenanceBy *time.Time       `json:"pendingMaintenanceBy,omitempty"`
	ScheduledAt          time.Time        `json:"scheduledAt"`
	State                MaintenanceState `json:"state"`
	Type                 string           `json:"type"`
}

// MaintenanceState defines model for maintenanceState.
type MaintenanceState string

// MaxmemoryPolicy The eviction policy for the Redis instance
type MaxmemoryPolicy string

// NativeEnvironmentDetails defines model for nativeEnvironmentDetails.
type NativeEnvironmentDetails struct {
	BuildCommand     string  `json:"buildCommand"`
	PreDeployCommand *string `json:"preDeployCommand,omitempty"`
	StartCommand     string  `json:"startCommand"`
}

// NativeEnvironmentDetailsPATCH defines model for nativeEnvironmentDetailsPATCH.
type NativeEnvironmentDetailsPATCH struct {
	BuildCommand *string `json:"buildCommand,omitempty"`
	StartCommand *string `json:"startCommand,omitempty"`
}

// NativeEnvironmentDetailsPOST Fields for native environment (runtime) services
type NativeEnvironmentDetailsPOST struct {
	BuildCommand string `json:"buildCommand"`
	StartCommand string `json:"startCommand"`
}

// NotificationOverride defines model for notificationOverride.
type NotificationOverride struct {
	Id                          string                   `json:"id"`
	NotificationsToSend         NotifyOverride           `json:"notificationsToSend"`
	PreviewNotificationsEnabled NotifyPreviewOverride    `json:"previewNotificationsEnabled"`
	Type                        NotificationOverrideType `json:"type"`
}

// NotificationOverrideType defines model for NotificationOverride.Type.
type NotificationOverrideType string

// NotificationOverrideWithCursor defines model for notificationOverrideWithCursor.
type NotificationOverrideWithCursor struct {
	Cursor   Cursor               `json:"cursor"`
	Override NotificationOverride `json:"override"`
}

// NotificationServiceOverride defines model for notificationServiceOverride.
type NotificationServiceOverride struct {
	NotificationsToSend         NotifyOverride        `json:"notificationsToSend"`
	PreviewNotificationsEnabled NotifyPreviewOverride `json:"previewNotificationsEnabled"`
	ServiceId                   string                `json:"serviceId"`
}

// NotificationServiceOverridePATCH defines model for notificationServiceOverridePATCH.
type NotificationServiceOverridePATCH struct {
	NotificationsToSend         *NotifyOverride        `json:"notificationsToSend,omitempty"`
	PreviewNotificationsEnabled *NotifyPreviewOverride `json:"previewNotificationsEnabled,omitempty"`
}

// NotificationSetting defines model for notificationSetting.
type NotificationSetting struct {
	EmailEnabled                bool            `json:"emailEnabled"`
	NotificationsToSend         NotifySettingV2 `json:"notificationsToSend"`
	OwnerId                     string          `json:"ownerId"`
	PreviewNotificationsEnabled bool            `json:"previewNotificationsEnabled"`
	SlackEnabled                bool            `json:"slackEnabled"`
}

// NotificationSettingPATCH defines model for notificationSettingPATCH.
type NotificationSettingPATCH struct {
	EmailEnabled                *bool            `json:"emailEnabled,omitempty"`
	NotificationsToSend         *NotifySettingV2 `json:"notificationsToSend,omitempty"`
	PreviewNotificationsEnabled *bool            `json:"previewNotificationsEnabled,omitempty"`
}

// NotifyOverride defines model for notifyOverride.
type NotifyOverride string

// NotifyPreviewOverride defines model for notifyPreviewOverride.
type NotifyPreviewOverride string

// NotifySetting defines model for notifySetting.
type NotifySetting string

// NotifySettingV2 defines model for notifySettingV2.
type NotifySettingV2 string

// Owner defines model for owner.
type Owner struct {
	Email string    `json:"email"`
	Id    string    `json:"id"`
	Name  string    `json:"name"`
	Type  OwnerType `json:"type"`
}

// OwnerType defines model for Owner.Type.
type OwnerType string

// PaidPlan Defaults to "starter"
type PaidPlan string

// Plan The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
type Plan string

// Postgres defines model for postgres.
type Postgres struct {
	CreatedAt     time.Time `json:"createdAt"`
	DatabaseName  string    `json:"databaseName"`
	DatabaseUser  string    `json:"databaseUser"`
	EnvironmentId *string   `json:"environmentId,omitempty"`

	// ExpiresAt The time at which the database will be expire. Applies to free tier databases only.
	ExpiresAt               *time.Time                `json:"expiresAt,omitempty"`
	HighAvailabilityEnabled bool                      `json:"highAvailabilityEnabled"`
	Id                      string                    `json:"id"`
	IpAllowList             []CidrBlockAndDescription `json:"ipAllowList"`
	Maintenance             *MaintenanceInfo          `json:"maintenance,omitempty"`
	Name                    string                    `json:"name"`
	Owner                   Owner                     `json:"owner"`
	Plan                    PostgresPlans             `json:"plan"`
	PrimaryPostgresID       *string                   `json:"primaryPostgresID,omitempty"`
	ReadReplicas            ReadReplicas              `json:"readReplicas"`

	// Region Defaults to "oregon"
	Region     Region            `json:"region"`
	Role       DatabaseRole      `json:"role"`
	Status     DatabaseStatus    `json:"status"`
	Suspended  PostgresSuspended `json:"suspended"`
	Suspenders []SuspenderType   `json:"suspenders"`
	UpdatedAt  time.Time         `json:"updatedAt"`

	// Version The PostgreSQL version
	Version PostgresVersion `json:"version"`
}

// PostgresSuspended defines model for Postgres.Suspended.
type PostgresSuspended string

// PostgresConnectionInfo defines model for postgresConnectionInfo.
type PostgresConnectionInfo struct {
	ExternalConnectionString string `json:"externalConnectionString"`
	InternalConnectionString string `json:"internalConnectionString"`
	Password                 string `json:"password"`
	PsqlCommand              string `json:"psqlCommand"`
}

// PostgresPATCHInput defines model for postgresPATCHInput.
type PostgresPATCHInput struct {
	DatadogAPIKey          *string                    `json:"datadogAPIKey,omitempty"`
	EnableHighAvailability *bool                      `json:"enableHighAvailability,omitempty"`
	IpAllowList            *[]CidrBlockAndDescription `json:"ipAllowList,omitempty"`
	Name                   *string                    `json:"name,omitempty"`
	Plan                   *PostgresPlans             `json:"plan,omitempty"`
	ReadReplicas           *ReadReplicasInput         `json:"readReplicas,omitempty"`
}

// PostgresPOSTInput Input for creating a database
type PostgresPOSTInput struct {
	DatabaseName           *string                    `json:"databaseName,omitempty"`
	DatabaseUser           *string                    `json:"databaseUser,omitempty"`
	DatadogAPIKey          *string                    `json:"datadogAPIKey,omitempty"`
	EnableHighAvailability *bool                      `json:"enableHighAvailability,omitempty"`
	EnvironmentId          *string                    `json:"environmentId,omitempty"`
	IpAllowList            *[]CidrBlockAndDescription `json:"ipAllowList,omitempty"`

	// Name The name of the database as it will appear in the Render dashboard
	Name string `json:"name"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId      string             `json:"ownerId"`
	Plan         PostgresPlans      `json:"plan"`
	ReadReplicas *ReadReplicasInput `json:"readReplicas,omitempty"`
	Region       *string            `json:"region,omitempty"`

	// Version The PostgreSQL version
	Version PostgresVersion `json:"version"`
}

// PostgresPlans defines model for postgresPlans.
type PostgresPlans string

// PostgresVersion The PostgreSQL version
type PostgresVersion string

// PreviewInput defines model for previewInput.
type PreviewInput struct {
	// ImagePath Must be either a full URL or the relative path to an image. If a relative path, Render uses the base service's image URL as its root. For example, if the base service's image URL is `docker.io/library/nginx:latest`, then valid values are: `docker.io/library/nginx:<any tag or SHA>`, `library/nginx:<any tag or SHA>`, or `nginx:<any tag or SHA>`. Note that the path must match (only the tag or SHA can vary).
	ImagePath string `json:"imagePath"`

	// Name A name for the service preview instance. If not specified, Render generates the name using the base service's name and the specified tag or SHA.
	Name *string `json:"name,omitempty"`

	// Plan The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan *Plan `json:"plan,omitempty"`
}

// PrivateServiceDetails defines model for privateServiceDetails.
type PrivateServiceDetails struct {
	Autoscaling *AutoscalingConfig `json:"autoscaling,omitempty"`
	BuildPlan   BuildPlan          `json:"buildPlan"`
	Disk        *Disk              `json:"disk,omitempty"`

	// Env Environment (runtime)
	Env                ServiceEnv         `json:"env"`
	EnvSpecificDetails EnvSpecificDetails `json:"envSpecificDetails"`

	// NumInstances For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
	NumInstances int          `json:"numInstances"`
	OpenPorts    []ServerPort `json:"openPorts"`
	ParentServer *Resource    `json:"parentServer,omitempty"`

	// Plan The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan                       Plan                       `json:"plan"`
	PullRequestPreviewsEnabled PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled"`

	// Region Defaults to "oregon"
	Region Region `json:"region"`
	Url    string `json:"url"`
}

// PrivateServiceDetailsPATCH defines model for privateServiceDetailsPATCH.
type PrivateServiceDetailsPATCH struct {
	EnvSpecificDetails *EnvSpecificDetailsPATCH `json:"envSpecificDetails,omitempty"`

	// Plan Defaults to "starter"
	Plan                       *PaidPlan                                             `json:"plan,omitempty"`
	PreDeployCommand           *string                                               `json:"preDeployCommand,omitempty"`
	PullRequestPreviewsEnabled *PrivateServiceDetailsPATCHPullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Runtime Environment (runtime)
	Runtime *ServiceEnv `json:"runtime,omitempty"`
}

// PrivateServiceDetailsPATCHPullRequestPreviewsEnabled defines model for PrivateServiceDetailsPATCH.PullRequestPreviewsEnabled.
type PrivateServiceDetailsPATCHPullRequestPreviewsEnabled string

// PrivateServiceDetailsPOST defines model for privateServiceDetailsPOST.
type PrivateServiceDetailsPOST struct {
	Autoscaling *AutoscalingConfig `json:"autoscaling,omitempty"`
	Disk        *ServiceDisk       `json:"disk,omitempty"`

	// Env Environment (runtime)
	Env                ServiceEnv              `json:"env"`
	EnvSpecificDetails *EnvSpecificDetailsPOST `json:"envSpecificDetails,omitempty"`

	// NumInstances Defaults to 1
	NumInstances *int `json:"numInstances,omitempty"`

	// Plan Defaults to "starter"
	Plan             *PaidPlan `json:"plan,omitempty"`
	PreDeployCommand *string   `json:"preDeployCommand,omitempty"`

	// PullRequestPreviewsEnabled Defaults to "no"
	PullRequestPreviewsEnabled *PrivateServiceDetailsPOSTPullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Region Defaults to "oregon"
	Region *Region `json:"region,omitempty"`
}

// PrivateServiceDetailsPOSTPullRequestPreviewsEnabled Defaults to "no"
type PrivateServiceDetailsPOSTPullRequestPreviewsEnabled string

// Project A project is a collection of environments
type Project struct {
	CreatedAt time.Time `json:"createdAt"`

	// EnvironmentIds The environments associated with the project
	EnvironmentIds []string `json:"environmentIds"`

	// Id The ID of the project
	Id string `json:"id"`

	// Name The name of the project
	Name      string    `json:"name"`
	Owner     Owner     `json:"owner"`
	UpdatedAt time.Time `json:"updatedAt"`
}

// ProjectPATCHInput Input type for updating a project
type ProjectPATCHInput struct {
	Name *string `json:"name,omitempty"`
}

// ProjectPOSTEnvironmentInput defines model for projectPOSTEnvironmentInput.
type ProjectPOSTEnvironmentInput struct {
	DatabasesIds *[]string `json:"databasesIds,omitempty"`
	EnvGroupsIds *[]string `json:"envGroupsIds,omitempty"`
	Name         string    `json:"name"`

	// ProtectedStatus Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
	ProtectedStatus *ProtectedStatus `json:"protectedStatus,omitempty"`
	RedisIds        *[]string        `json:"redisIds,omitempty"`
	ServicesIds     *[]string        `json:"servicesIds,omitempty"`
}

// ProjectPOSTInput defines model for projectPOSTInput.
type ProjectPOSTInput struct {
	// Environments The environments to create when creating the project
	Environments []ProjectPOSTEnvironmentInput `json:"environments"`

	// Name The name of the project
	Name string `json:"name"`

	// OwnerId The ID of the owner that the project belongs to
	OwnerId string `json:"ownerId"`
}

// ProjectWithCursor defines model for projectWithCursor.
type ProjectWithCursor struct {
	Cursor Cursor `json:"cursor"`

	// Project A project is a collection of environments
	Project Project `json:"project"`
}

// ProtectedStatus Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
type ProtectedStatus string

// PullRequestPreviewsEnabled defines model for pullRequestPreviewsEnabled.
type PullRequestPreviewsEnabled string

// ReadReplica defines model for readReplica.
type ReadReplica struct {
	// Id The replica instance identifier.
	Id string `json:"id"`

	// Name The display name of the replica instance.
	Name string `json:"name"`
}

// ReadReplicaInput defines model for readReplicaInput.
type ReadReplicaInput struct {
	// Name The display name of the replica instance.
	Name string `json:"name"`
}

// ReadReplicas defines model for readReplicas.
type ReadReplicas = []ReadReplica

// ReadReplicasInput defines model for readReplicasInput.
type ReadReplicasInput = []ReadReplicaInput

// Redis A Redis instance
type Redis struct {
	// CreatedAt The creation time of the Redis instance
	CreatedAt time.Time `json:"createdAt"`

	// EnvironmentId The ID of the environment the Redis instance is associated with
	EnvironmentId *string `json:"environmentId,omitempty"`

	// Id The ID of the Redis instance
	Id string `json:"id"`

	// IpAllowList The IP allow list for the Redis instance
	IpAllowList []CidrBlockAndDescription `json:"ipAllowList"`

	// Name The name of the Redis instance
	Name string `json:"name"`

	// Options Options for a Redis instance
	Options RedisOptions `json:"options"`
	Owner   Owner        `json:"owner"`
	Plan    RedisPlan    `json:"plan"`

	// Region Defaults to "oregon"
	Region Region         `json:"region"`
	Status DatabaseStatus `json:"status"`

	// UpdatedAt The last updated time of the Redis instance
	UpdatedAt time.Time `json:"updatedAt"`

	// Version The version of Redis
	Version string `json:"version"`
}

// RedisConnectionInfo A Redis instance
type RedisConnectionInfo struct {
	// ExternalConnectionString The connection string to use from outside Render
	ExternalConnectionString string `json:"externalConnectionString"`

	// InternalConnectionString The connection string to use from within Render
	InternalConnectionString string `json:"internalConnectionString"`

	// RedisCLICommand The Redis CLI command to connect to the Redis instance
	RedisCLICommand string `json:"redisCLICommand"`
}

// RedisOptions Options for a Redis instance
type RedisOptions struct {
	MaxmemoryPolicy *string `json:"maxmemoryPolicy,omitempty"`
}

// RedisPATCHInput Input type for updating a Redis instance
type RedisPATCHInput struct {
	IpAllowList *[]CidrBlockAndDescription `json:"ipAllowList,omitempty"`

	// MaxmemoryPolicy The eviction policy for the Redis instance
	MaxmemoryPolicy *MaxmemoryPolicy `json:"maxmemoryPolicy,omitempty"`

	// Name The name of the Redis instance
	Name *string    `json:"name,omitempty"`
	Plan *RedisPlan `json:"plan,omitempty"`
}

// RedisPOSTInput Input type for creating a Redis instance
type RedisPOSTInput struct {
	EnvironmentId *string                    `json:"environmentId,omitempty"`
	IpAllowList   *[]CidrBlockAndDescription `json:"ipAllowList,omitempty"`

	// MaxmemoryPolicy The eviction policy for the Redis instance
	MaxmemoryPolicy *MaxmemoryPolicy `json:"maxmemoryPolicy,omitempty"`

	// Name The name of the Redis instance
	Name string `json:"name"`

	// OwnerId The ID of the owner of the Redis instance
	OwnerId string    `json:"ownerId"`
	Plan    RedisPlan `json:"plan"`

	// Region The region where the Redis instance is located
	Region *string `json:"region,omitempty"`
}

// RedisPlan defines model for redisPlan.
type RedisPlan string

// Region Defaults to "oregon"
type Region string

// RegistryCredential defines model for registryCredential.
type RegistryCredential struct {
	// Id Unique identifier for this credential
	Id string `json:"id"`

	// Name Descriptive name for this credential
	Name string `json:"name"`

	// Registry The registry to use this credential with
	Registry RegistryCredentialRegistry `json:"registry"`

	// Username The username associated with the credential
	Username string `json:"username"`
}

// RegistryCredentialRegistry The registry to use this credential with
type RegistryCredentialRegistry string

// RegistryCredentialSummary defines model for registryCredentialSummary.
type RegistryCredentialSummary struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// Resource defines model for resource.
type Resource struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// Route defines model for route.
type Route struct {
	Destination string `json:"destination"`
	Id          string `json:"id"`

	// Priority Redirect and Rewrite Rules are applied in priority order starting at 0
	Priority int       `json:"priority"`
	Source   string    `json:"source"`
	Type     RouteType `json:"type"`
}

// RoutePatch defines model for routePatch.
type RoutePatch struct {
	// Priority Redirect and Rewrite Rules are applied in priority order starting at 0. Moves this route to the specified priority and adjusts other route priorities accordingly.
	Priority *int `json:"priority"`
}

// RoutePost defines model for routePost.
type RoutePost struct {
	Destination string `json:"destination"`

	// Priority Redirect and Rewrite Rules are applied in priority order starting at 0. Defaults to last in the priority list.
	Priority *int      `json:"priority,omitempty"`
	Source   string    `json:"source"`
	Type     RouteType `json:"type"`
}

// RoutePut defines model for routePut.
type RoutePut struct {
	Destination string    `json:"destination"`
	Source      string    `json:"source"`
	Type        RouteType `json:"type"`
}

// RouteType defines model for routeType.
type RouteType string

// RouteWithCursor defines model for routeWithCursor.
type RouteWithCursor struct {
	Cursor string `json:"cursor"`
	Route  Route  `json:"route"`
}

// SecretFile defines model for secretFile.
type SecretFile struct {
	Content string `json:"content"`
	Name    string `json:"name"`
}

// SecretFileInput defines model for secretFileInput.
type SecretFileInput struct {
	Content string `json:"content"`
	Name    string `json:"name"`
}

// SecretFileWithCursor defines model for secretFileWithCursor.
type SecretFileWithCursor struct {
	Cursor     Cursor     `json:"cursor"`
	SecretFile SecretFile `json:"secretFile"`
}

// ServerPort defines model for serverPort.
type ServerPort struct {
	Port     int                `json:"port"`
	Protocol ServerPortProtocol `json:"protocol"`
}

// ServerPortProtocol defines model for ServerPort.Protocol.
type ServerPortProtocol string

// Service defines model for service.
type Service struct {
	AutoDeploy         AutoDeploy                 `json:"autoDeploy"`
	Branch             *string                    `json:"branch,omitempty"`
	BuildFilter        *BuildFilter               `json:"buildFilter,omitempty"`
	CreatedAt          time.Time                  `json:"createdAt"`
	EnvironmentId      *string                    `json:"environmentId,omitempty"`
	Id                 string                     `json:"id"`
	ImagePath          *string                    `json:"imagePath,omitempty"`
	Name               string                     `json:"name"`
	NotifyOnFail       NotifySetting              `json:"notifyOnFail"`
	OwnerId            string                     `json:"ownerId"`
	RegistryCredential *RegistryCredentialSummary `json:"registryCredential,omitempty"`
	Repo               *string                    `json:"repo,omitempty"`
	RootDir            string                     `json:"rootDir"`
	ServiceDetails     Service_ServiceDetails     `json:"serviceDetails"`
	Slug               string                     `json:"slug"`
	Suspended          ServiceSuspended           `json:"suspended"`
	Suspenders         []SuspenderType            `json:"suspenders"`
	Type               ServiceType                `json:"type"`
	UpdatedAt          time.Time                  `json:"updatedAt"`
}

// Service_ServiceDetails defines model for Service.ServiceDetails.
type Service_ServiceDetails struct {
	union json.RawMessage
}

// ServiceSuspended defines model for Service.Suspended.
type ServiceSuspended string

// ServiceAndDeploy defines model for serviceAndDeploy.
type ServiceAndDeploy struct {
	DeployId *string  `json:"deployId,omitempty"`
	Service  *Service `json:"service,omitempty"`
}

// ServiceDisk defines model for serviceDisk.
type ServiceDisk struct {
	MountPath string `json:"mountPath"`
	Name      string `json:"name"`

	// SizeGB Defaults to 1
	SizeGB *int `json:"sizeGB,omitempty"`
}

// ServiceEnv Environment (runtime)
type ServiceEnv string

// ServiceLink defines model for serviceLink.
type ServiceLink struct {
	Id   string           `json:"id"`
	Name string           `json:"name"`
	Type ServiceTypeShort `json:"type"`
}

// ServicePATCH defines model for servicePATCH.
type ServicePATCH struct {
	AutoDeploy     *AutoDeploy                  `json:"autoDeploy,omitempty"`
	Branch         *string                      `json:"branch,omitempty"`
	BuildFilter    *BuildFilter                 `json:"buildFilter,omitempty"`
	Image          *Image                       `json:"image,omitempty"`
	Name           *string                      `json:"name,omitempty"`
	Repo           *string                      `json:"repo,omitempty"`
	RootDir        *string                      `json:"rootDir,omitempty"`
	ServiceDetails *ServicePATCH_ServiceDetails `json:"serviceDetails,omitempty"`
}

// ServicePATCH_ServiceDetails defines model for ServicePATCH.ServiceDetails.
type ServicePATCH_ServiceDetails struct {
	union json.RawMessage
}

// ServicePOST defines model for servicePOST.
type ServicePOST struct {
	AutoDeploy *AutoDeploy `json:"autoDeploy,omitempty"`

	// Branch If left empty, this will fall back to the default branch of the repository
	Branch      *string           `json:"branch,omitempty"`
	BuildFilter *BuildFilter      `json:"buildFilter,omitempty"`
	EnvVars     *EnvVarInputArray `json:"envVars,omitempty"`
	Image       *Image            `json:"image,omitempty"`
	Name        string            `json:"name"`
	OwnerId     string            `json:"ownerId"`

	// Repo Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           *string                     `json:"repo,omitempty"`
	RootDir        *string                     `json:"rootDir,omitempty"`
	SecretFiles    *[]SecretFileInput          `json:"secretFiles,omitempty"`
	ServiceDetails *ServicePOST_ServiceDetails `json:"serviceDetails,omitempty"`
	Type           ServiceType                 `json:"type"`
}

// ServicePOST_ServiceDetails defines model for ServicePOST.ServiceDetails.
type ServicePOST_ServiceDetails struct {
	union json.RawMessage
}

// ServiceType defines model for serviceType.
type ServiceType string

// ServiceTypeShort defines model for serviceTypeShort.
type ServiceTypeShort string

// SnapshotRestorePOST defines model for snapshotRestorePOST.
type SnapshotRestorePOST struct {
	// InstanceId When a service with a disk is scaled, the instanceId is used to identify the instance that the disk is attached to. Each instance's disks get their own snapshots, and can be restored separately.
	InstanceId  *InstanceId `json:"instanceId,omitempty"`
	SnapshotKey string      `json:"snapshotKey"`
}

// StaticSiteDetails defines model for staticSiteDetails.
type StaticSiteDetails struct {
	BuildCommand               string                     `json:"buildCommand"`
	BuildPlan                  BuildPlan                  `json:"buildPlan"`
	ParentServer               *Resource                  `json:"parentServer,omitempty"`
	PublishPath                string                     `json:"publishPath"`
	PullRequestPreviewsEnabled PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled"`
	Url                        string                     `json:"url"`
}

// StaticSiteDetailsPATCH defines model for staticSiteDetailsPATCH.
type StaticSiteDetailsPATCH struct {
	BuildCommand               *string                                           `json:"buildCommand,omitempty"`
	PublishPath                *string                                           `json:"publishPath,omitempty"`
	PullRequestPreviewsEnabled *StaticSiteDetailsPATCHPullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`
}

// StaticSiteDetailsPATCHPullRequestPreviewsEnabled defines model for StaticSiteDetailsPATCH.PullRequestPreviewsEnabled.
type StaticSiteDetailsPATCHPullRequestPreviewsEnabled string

// StaticSiteDetailsPOST defines model for staticSiteDetailsPOST.
type StaticSiteDetailsPOST struct {
	BuildCommand *string        `json:"buildCommand,omitempty"`
	Headers      *[]HeaderInput `json:"headers,omitempty"`

	// PublishPath Defaults to "public"
	PublishPath *string `json:"publishPath,omitempty"`

	// PullRequestPreviewsEnabled Defaults to "no"
	PullRequestPreviewsEnabled *StaticSiteDetailsPOSTPullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`
	Routes                     *[]RoutePost                                     `json:"routes,omitempty"`
}

// StaticSiteDetailsPOSTPullRequestPreviewsEnabled Defaults to "no"
type StaticSiteDetailsPOSTPullRequestPreviewsEnabled string

// SuspenderType defines model for suspenderType.
type SuspenderType string

// TimeSeries A time series data point
type TimeSeries struct {
	// Labels List of labels describing the time series
	Labels []Label `json:"labels"`
	Unit   Unit    `json:"unit"`

	// Values The values of the time series
	Values []TimeSeriesValue `json:"values"`
}

// TimeSeriesCollection A collection of time series
type TimeSeriesCollection = []TimeSeries

// TimeSeriesValue A time series datapoint value
type TimeSeriesValue struct {
	Timestamp time.Time `json:"timestamp"`
	Value     float32   `json:"value"`
}

// Unit defines model for unit.
type Unit = string

// WebServiceDetails defines model for webServiceDetails.
type WebServiceDetails struct {
	Autoscaling *AutoscalingConfig `json:"autoscaling,omitempty"`
	BuildPlan   BuildPlan          `json:"buildPlan"`
	Disk        *Disk              `json:"disk,omitempty"`

	// Env Environment (runtime)
	Env                ServiceEnv         `json:"env"`
	EnvSpecificDetails EnvSpecificDetails `json:"envSpecificDetails"`
	HealthCheckPath    string             `json:"healthCheckPath"`

	// NumInstances For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
	NumInstances int          `json:"numInstances"`
	OpenPorts    []ServerPort `json:"openPorts"`
	ParentServer *Resource    `json:"parentServer,omitempty"`

	// Plan The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan                       Plan                       `json:"plan"`
	PullRequestPreviewsEnabled PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled"`

	// Region Defaults to "oregon"
	Region Region `json:"region"`
	Url    string `json:"url"`
}

// WebServiceDetailsPATCH defines model for webServiceDetailsPATCH.
type WebServiceDetailsPATCH struct {
	EnvSpecificDetails *EnvSpecificDetailsPATCH `json:"envSpecificDetails,omitempty"`
	HealthCheckPath    *string                  `json:"healthCheckPath,omitempty"`

	// Plan Defaults to "starter"
	Plan                       *PaidPlan                                         `json:"plan,omitempty"`
	PreDeployCommand           *string                                           `json:"preDeployCommand,omitempty"`
	PullRequestPreviewsEnabled *WebServiceDetailsPATCHPullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Runtime Environment (runtime)
	Runtime *ServiceEnv `json:"runtime,omitempty"`
}

// WebServiceDetailsPATCHPullRequestPreviewsEnabled defines model for WebServiceDetailsPATCH.PullRequestPreviewsEnabled.
type WebServiceDetailsPATCHPullRequestPreviewsEnabled string

// WebServiceDetailsPOST defines model for webServiceDetailsPOST.
type WebServiceDetailsPOST struct {
	Autoscaling *AutoscalingConfig `json:"autoscaling,omitempty"`
	Disk        *ServiceDisk       `json:"disk,omitempty"`

	// Env Environment (runtime)
	Env                ServiceEnv              `json:"env"`
	EnvSpecificDetails *EnvSpecificDetailsPOST `json:"envSpecificDetails,omitempty"`
	HealthCheckPath    *string                 `json:"healthCheckPath,omitempty"`

	// NumInstances Defaults to 1
	NumInstances *int `json:"numInstances,omitempty"`

	// Plan Defaults to "starter"
	Plan             *PaidPlan `json:"plan,omitempty"`
	PreDeployCommand *string   `json:"preDeployCommand,omitempty"`

	// PullRequestPreviewsEnabled Defaults to "no"
	PullRequestPreviewsEnabled *WebServiceDetailsPOSTPullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Region Defaults to "oregon"
	Region *Region `json:"region,omitempty"`
}

// WebServiceDetailsPOSTPullRequestPreviewsEnabled Defaults to "no"
type WebServiceDetailsPOSTPullRequestPreviewsEnabled string

// ApplicationMetricAggregationMethod defines model for applicationMetricAggregationMethod.
type ApplicationMetricAggregationMethod string

// CreatedAfterParam defines model for createdAfterParam.
type CreatedAfterParam = time.Time

// CreatedBeforeParam defines model for createdBeforeParam.
type CreatedBeforeParam = time.Time

// CursorParam defines model for cursorParam.
type CursorParam = string

// CustomDomainIdOrNameParam defines model for customDomainIdOrNameParam.
type CustomDomainIdOrNameParam = string

// DeployIdParam defines model for deployIdParam.
type DeployIdParam = string

// EndTimeParam defines model for endTimeParam.
type EndTimeParam = time.Time

// EnvGroupIdParam defines model for envGroupIdParam.
type EnvGroupIdParam = string

// EnvParam defines model for envParam.
type EnvParam = []ServiceEnv

// EnvVarKeyParam defines model for envVarKeyParam.
type EnvVarKeyParam = string

// EnvironmentIdParam defines model for environmentIdParam.
type EnvironmentIdParam = []string

// HostQueryParam defines model for hostQueryParam.
type HostQueryParam = string

// HttpAggregateBy defines model for httpAggregateBy.
type HttpAggregateBy string

// HttpStatusCode defines model for httpStatusCode.
type HttpStatusCode = string

// IncludeReplicasParam defines model for includeReplicasParam.
type IncludeReplicasParam = bool

// InstanceQueryParam defines model for instanceQueryParam.
type InstanceQueryParam = string

// JobIdParam defines model for jobIdParam.
type JobIdParam = string

// LimitParam Defaults to 20
type LimitParam = float32

// NameParam defines model for nameParam.
type NameParam = []string

// OwnerIdParam defines model for ownerIdParam.
type OwnerIdParam = []string

// OwnerIdPathParam defines model for ownerIdPathParam.
type OwnerIdPathParam = string

// PathQueryParam defines model for pathQueryParam.
type PathQueryParam = string

// ProjectIdParam defines model for projectIdParam.
type ProjectIdParam = []string

// Quantile defines model for quantile.
type Quantile = float32

// RegionParam defines model for regionParam.
type RegionParam = []Region

// ResolutionParam defines model for resolutionParam.
type ResolutionParam = float32

// SecretFileNameParam defines model for secretFileNameParam.
type SecretFileNameParam = string

// ServiceIdParam defines model for serviceIdParam.
type ServiceIdParam = string

// ServiceIdsParam defines model for serviceIdsParam.
type ServiceIdsParam = []string

// ServiceQueryParam defines model for serviceQueryParam.
type ServiceQueryParam = string

// ServiceTypeParam defines model for serviceTypeParam.
type ServiceTypeParam = []ServiceType

// StartTimeParam defines model for startTimeParam.
type StartTimeParam = time.Time

// SuspendedParam defines model for suspendedParam.
type SuspendedParam = []string

// UpdatedAfterParam defines model for updatedAfterParam.
type UpdatedAfterParam = time.Time

// UpdatedBeforeParam defines model for updatedBeforeParam.
type UpdatedBeforeParam = time.Time

// N400BadRequest defines model for 400BadRequest.
type N400BadRequest = Error

// N401Unauthorized defines model for 401Unauthorized.
type N401Unauthorized = Error

// N402PaymentRequired defines model for 402PaymentRequired.
type N402PaymentRequired = Error

// N403Forbidden defines model for 403Forbidden.
type N403Forbidden = Error

// N404NotFound defines model for 404NotFound.
type N404NotFound = Error

// N406NotAcceptable defines model for 406NotAcceptable.
type N406NotAcceptable = Error

// N409Conflict defines model for 409Conflict.
type N409Conflict = Error

// N410Gone defines model for 410Gone.
type N410Gone = Error

// N429RateLimit defines model for 429RateLimit.
type N429RateLimit = Error

// N500InternalServerError defines model for 500InternalServerError.
type N500InternalServerError = Error

// N503ServiceUnavailable defines model for 503ServiceUnavailable.
type N503ServiceUnavailable = Error

// Metrics200Response A collection of time series
type Metrics200Response = TimeSeriesCollection

// MetricsFiltersApplication200Response A collection of filter values for application metrics
type MetricsFiltersApplication200Response = FilterApplicationValuesCollection

// MetricsFiltersHTTP200Response A collection of filter values for HTTP metrics
type MetricsFiltersHTTP200Response = FilterHTTPValuesCollection

// MetricsFiltersPath200Response A collection of suggested paths to filter by
type MetricsFiltersPath200Response = FilterPathValuesCollection

// GetDisksParams defines parameters for GetDisks.
type GetDisksParams struct {
	// Name Filter by resource name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// ServiceIds Filter for resources by service ID
	ServiceIds *ServiceIdsParam `form:"serviceIds,omitempty" json:"serviceIds,omitempty"`

	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListEnvGroupsParams defines parameters for ListEnvGroups.
type ListEnvGroupsParams struct {
	// Name Filter by resource name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// EnvironmentId Filter for resources that belong to an environment
	EnvironmentId *EnvironmentIdParam `form:"environmentId,omitempty" json:"environmentId,omitempty"`

	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// UpdateEnvGroupSecretFileJSONBody defines parameters for UpdateEnvGroupSecretFile.
type UpdateEnvGroupSecretFileJSONBody struct {
	Content *string `json:"content,omitempty"`
}

// ListEnvironmentsParams defines parameters for ListEnvironments.
type ListEnvironmentsParams struct {
	// Name Filter by resource name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// ProjectId Filter for resources that belong to a project
	ProjectId ProjectIdParam `form:"projectId" json:"projectId"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// EnvironmentId Filter for resources that belong to an environment
	EnvironmentId *EnvironmentIdParam `form:"environmentId,omitempty" json:"environmentId,omitempty"`

	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// RemoveResourcesFromEnvironmentParams defines parameters for RemoveResourcesFromEnvironment.
type RemoveResourcesFromEnvironmentParams struct {
	ResourceIds []string `form:"resourceIds" json:"resourceIds"`
}

// GetBandwidthParams defines parameters for GetBandwidth.
type GetBandwidthParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`
}

// GetCpuParams defines parameters for GetCpu.
type GetCpuParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`

	// Instance Instance ID to query. When multiple instance ID query params are provided, they are ORed together
	Instance *InstanceQueryParam `form:"instance,omitempty" json:"instance,omitempty"`

	// AggregationMethod The aggregation method to apply to multiple time series
	AggregationMethod *ApplicationMetricAggregationMethod `form:"aggregationMethod,omitempty" json:"aggregationMethod,omitempty"`
}

// GetCpuLimitParams defines parameters for GetCpuLimit.
type GetCpuLimitParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`

	// Instance Instance ID to query. When multiple instance ID query params are provided, they are ORed together
	Instance *InstanceQueryParam `form:"instance,omitempty" json:"instance,omitempty"`
}

// GetCpuTargetParams defines parameters for GetCpuTarget.
type GetCpuTargetParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`

	// Instance Instance ID to query. When multiple instance ID query params are provided, they are ORed together
	Instance *InstanceQueryParam `form:"instance,omitempty" json:"instance,omitempty"`
}

// GetDiskCapacityParams defines parameters for GetDiskCapacity.
type GetDiskCapacityParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`
}

// GetDiskUsageParams defines parameters for GetDiskUsage.
type GetDiskUsageParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`
}

// GetApplicationFilterValuesParams defines parameters for GetApplicationFilterValues.
type GetApplicationFilterValuesParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`
}

// GetHttpFilterValuesParams defines parameters for GetHttpFilterValues.
type GetHttpFilterValuesParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`

	// Host The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together
	Host *HostQueryParam `form:"host,omitempty" json:"host,omitempty"`

	// StatusCode The status codes of HTTP requests to filter to. When multiple status code query params are provided, they are ORed together
	StatusCode *HttpStatusCode `form:"statusCode,omitempty" json:"statusCode,omitempty"`
}

// GetPathFilterValuesParams defines parameters for GetPathFilterValues.
type GetPathFilterValuesParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`

	// Host The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together
	Host *HostQueryParam `form:"host,omitempty" json:"host,omitempty"`

	// StatusCode The status codes of HTTP requests to filter to. When multiple status code query params are provided, they are ORed together
	StatusCode *HttpStatusCode `form:"statusCode,omitempty" json:"statusCode,omitempty"`

	// Path The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together
	Path *PathQueryParam `form:"path,omitempty" json:"path,omitempty"`
}

// GetHttpLatencyParams defines parameters for GetHttpLatency.
type GetHttpLatencyParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`

	// Host The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together
	Host *HostQueryParam `form:"host,omitempty" json:"host,omitempty"`

	// Path The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together
	Path *PathQueryParam `form:"path,omitempty" json:"path,omitempty"`

	// Quantile The quantile of latencies to fetch. When multiple quantile query params are provided, they are ORed together
	Quantile *Quantile `form:"quantile,omitempty" json:"quantile,omitempty"`
}

// GetHttpRequestsParams defines parameters for GetHttpRequests.
type GetHttpRequestsParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`

	// Host The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together
	Host *HostQueryParam `form:"host,omitempty" json:"host,omitempty"`

	// Path The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together
	Path *PathQueryParam `form:"path,omitempty" json:"path,omitempty"`

	// AggregateBy The field to aggregate by
	AggregateBy *HttpAggregateBy `form:"aggregateBy,omitempty" json:"aggregateBy,omitempty"`
}

// GetInstanceCountParams defines parameters for GetInstanceCount.
type GetInstanceCountParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`
}

// GetMemoryParams defines parameters for GetMemory.
type GetMemoryParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`

	// Instance Instance ID to query. When multiple instance ID query params are provided, they are ORed together
	Instance *InstanceQueryParam `form:"instance,omitempty" json:"instance,omitempty"`
}

// GetMemoryLimitParams defines parameters for GetMemoryLimit.
type GetMemoryLimitParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`

	// Instance Instance ID to query. When multiple instance ID query params are provided, they are ORed together
	Instance *InstanceQueryParam `form:"instance,omitempty" json:"instance,omitempty"`
}

// GetMemoryTargetParams defines parameters for GetMemoryTarget.
type GetMemoryTargetParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Service Service ID to query. When multiple service query params are provided, they are ORed together
	Service ServiceQueryParam `form:"service" json:"service"`

	// Instance Instance ID to query. When multiple instance ID query params are provided, they are ORed together
	Instance *InstanceQueryParam `form:"instance,omitempty" json:"instance,omitempty"`
}

// GetNotificationOverridesParams defines parameters for GetNotificationOverrides.
type GetNotificationOverridesParams struct {
	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// ServiceIds Filter for resources by service ID
	ServiceIds *ServiceIdsParam `form:"serviceIds,omitempty" json:"serviceIds,omitempty"`

	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// GetOwnersParams defines parameters for GetOwners.
type GetOwnersParams struct {
	Name  *[]string `form:"name,omitempty" json:"name,omitempty"`
	Email *[]string `form:"email,omitempty" json:"email,omitempty"`

	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListPostgresParams defines parameters for ListPostgres.
type ListPostgresParams struct {
	// Name Filter by resource name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// Region Filter by resource region
	Region *RegionParam `form:"region,omitempty" json:"region,omitempty"`

	// Suspended Filter resources based on whether they're suspended or not suspended
	Suspended *SuspendedParam `form:"suspended,omitempty" json:"suspended,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// EnvironmentId Filter for resources that belong to an environment
	EnvironmentId *EnvironmentIdParam `form:"environmentId,omitempty" json:"environmentId,omitempty"`

	// IncludeReplicas Include replicas in the response
	IncludeReplicas *IncludeReplicasParam `form:"includeReplicas,omitempty" json:"includeReplicas,omitempty"`

	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListPostgresParamsSuspended defines parameters for ListPostgres.
type ListPostgresParamsSuspended string

// GetProjectsParams defines parameters for GetProjects.
type GetProjectsParams struct {
	// Name Filter by resource name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListRedisParams defines parameters for ListRedis.
type ListRedisParams struct {
	// Name Filter by resource name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// Region Filter by resource region
	Region *RegionParam `form:"region,omitempty" json:"region,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// EnvironmentId Filter for resources that belong to an environment
	EnvironmentId *EnvironmentIdParam `form:"environmentId,omitempty" json:"environmentId,omitempty"`

	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// GetRegistryCredentialsParams defines parameters for GetRegistryCredentials.
type GetRegistryCredentialsParams struct {
	// Name Filter for the name of a credential
	Name *[]string `form:"name,omitempty" json:"name,omitempty"`

	// Username Filter for the username of a credential
	Username *[]string `form:"username,omitempty" json:"username,omitempty"`

	// Type Filter for the registry type for the credential
	Type *[]GetRegistryCredentialsParamsType `form:"type,omitempty" json:"type,omitempty"`

	// CreatedBefore Filter for services created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *time.Time `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for services created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *time.Time `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for services updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *time.Time `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for services updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *time.Time `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// GetRegistryCredentialsParamsType defines parameters for GetRegistryCredentials.
type GetRegistryCredentialsParamsType string

// CreateRegistryCredentialJSONBody defines parameters for CreateRegistryCredential.
type CreateRegistryCredentialJSONBody struct {
	AuthToken string                                   `json:"authToken"`
	Name      string                                   `json:"name"`
	OwnerId   string                                   `json:"ownerId"`
	Registry  CreateRegistryCredentialJSONBodyRegistry `json:"registry"`
	Username  string                                   `json:"username"`
}

// CreateRegistryCredentialJSONBodyRegistry defines parameters for CreateRegistryCredential.
type CreateRegistryCredentialJSONBodyRegistry string

// UpdateRegistryCredentialJSONBody defines parameters for UpdateRegistryCredential.
type UpdateRegistryCredentialJSONBody struct {
	AuthToken string                                   `json:"authToken"`
	Name      string                                   `json:"name"`
	Registry  UpdateRegistryCredentialJSONBodyRegistry `json:"registry"`
	Username  string                                   `json:"username"`
}

// UpdateRegistryCredentialJSONBodyRegistry defines parameters for UpdateRegistryCredential.
type UpdateRegistryCredentialJSONBodyRegistry string

// GetServicesParams defines parameters for GetServices.
type GetServicesParams struct {
	// Name Filter by resource name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// Type Filter for types of services
	Type *ServiceTypeParam `form:"type,omitempty" json:"type,omitempty"`

	// Env Filter for environments (runtimes) of services
	Env *EnvParam `form:"env,omitempty" json:"env,omitempty"`

	// Region Filter by resource region
	Region *RegionParam `form:"region,omitempty" json:"region,omitempty"`

	// Suspended Filter resources based on whether they're suspended or not suspended
	Suspended *SuspendedParam `form:"suspended,omitempty" json:"suspended,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// GetServicesParamsSuspended defines parameters for GetServices.
type GetServicesParamsSuspended string

// GetCustomDomainsParams defines parameters for GetCustomDomains.
type GetCustomDomainsParams struct {
	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// Name Filter for the names of custom domain
	Name *[]string `form:"name,omitempty" json:"name,omitempty"`

	// DomainType Filter for apex or subdomains
	DomainType *GetCustomDomainsParamsDomainType `form:"domainType,omitempty" json:"domainType,omitempty"`

	// VerificationStatus Filter for verified or unverified custom domains
	VerificationStatus *GetCustomDomainsParamsVerificationStatus `form:"verificationStatus,omitempty" json:"verificationStatus,omitempty"`

	// CreatedBefore Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *time.Time `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *time.Time `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`
}

// GetCustomDomainsParamsDomainType defines parameters for GetCustomDomains.
type GetCustomDomainsParamsDomainType string

// GetCustomDomainsParamsVerificationStatus defines parameters for GetCustomDomains.
type GetCustomDomainsParamsVerificationStatus string

// CreateCustomDomainJSONBody defines parameters for CreateCustomDomain.
type CreateCustomDomainJSONBody struct {
	Name string `json:"name"`
}

// GetDeploysParams defines parameters for GetDeploys.
type GetDeploysParams struct {
	// CreatedBefore Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *time.Time `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *time.Time `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *time.Time `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *time.Time `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// FinishedBefore Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)
	FinishedBefore *time.Time `form:"finishedBefore,omitempty" json:"finishedBefore,omitempty"`

	// FinishedAfter Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)
	FinishedAfter *time.Time `form:"finishedAfter,omitempty" json:"finishedAfter,omitempty"`

	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateDeployJSONBody defines parameters for CreateDeploy.
type CreateDeployJSONBody struct {
	// ClearCache Defaults to "do_not_clear"
	ClearCache *CreateDeployJSONBodyClearCache `json:"clearCache,omitempty"`

	// CommitId Specific ID of commit to deploy for a web service, defaults to latest commit. Not supported for Cron Job deploys.
	CommitId *string `json:"commitId,omitempty"`

	// ImageUrl URL of the image to deploy for an image-backed service. The host, repository, and image name must match the currently configured image for the service.
	ImageUrl *string `json:"imageUrl,omitempty"`
}

// CreateDeployJSONBodyClearCache defines parameters for CreateDeploy.
type CreateDeployJSONBodyClearCache string

// GetEnvVarsForServiceParams defines parameters for GetEnvVarsForService.
type GetEnvVarsForServiceParams struct {
	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// RetrieveHeadersParams defines parameters for RetrieveHeaders.
type RetrieveHeadersParams struct {
	// Path Filter for specific paths that headers apply to
	Path *[]string `form:"path,omitempty" json:"path,omitempty"`

	// Name Filter for header names
	Name *[]string `form:"name,omitempty" json:"name,omitempty"`

	// Value Filter for header values
	Value *[]string `form:"value,omitempty" json:"value,omitempty"`

	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// UpdateHeadersJSONBody defines parameters for UpdateHeaders.
type UpdateHeadersJSONBody = []HeaderInput

// ListJobParams defines parameters for ListJob.
type ListJobParams struct {
	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// Status Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)
	Status *[]ListJobParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// CreatedBefore Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *time.Time `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *time.Time `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// StartedBefore Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)
	StartedBefore *time.Time `form:"startedBefore,omitempty" json:"startedBefore,omitempty"`

	// StartedAfter Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)
	StartedAfter *time.Time `form:"startedAfter,omitempty" json:"startedAfter,omitempty"`

	// FinishedBefore Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)
	FinishedBefore *time.Time `form:"finishedBefore,omitempty" json:"finishedBefore,omitempty"`

	// FinishedAfter Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)
	FinishedAfter *time.Time `form:"finishedAfter,omitempty" json:"finishedAfter,omitempty"`
}

// ListJobParamsStatus defines parameters for ListJob.
type ListJobParamsStatus string

// PostJobJSONBody defines parameters for PostJob.
type PostJobJSONBody struct {
	PlanId       *string `json:"planId,omitempty"`
	StartCommand string  `json:"startCommand"`
}

// RollbackDeployJSONBody defines parameters for RollbackDeploy.
type RollbackDeployJSONBody struct {
	// DeployId The ID of the deploy to rollback to
	DeployId string `json:"deployId"`
}

// RetrieveRoutesParams defines parameters for RetrieveRoutes.
type RetrieveRoutesParams struct {
	// Type Filter for the type of route rule
	Type *[]RetrieveRoutesParamsType `form:"type,omitempty" json:"type,omitempty"`

	// Source Filter for the source path of the route
	Source *[]string `form:"source,omitempty" json:"source,omitempty"`

	// Destination Filter for the destination path of the route
	Destination *[]string `form:"destination,omitempty" json:"destination,omitempty"`

	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// RetrieveRoutesParamsType defines parameters for RetrieveRoutes.
type RetrieveRoutesParamsType string

// PutRoutesJSONBody defines parameters for PutRoutes.
type PutRoutesJSONBody = []RoutePut

// ScaleServiceJSONBody defines parameters for ScaleService.
type ScaleServiceJSONBody struct {
	NumInstances int `json:"numInstances"`
}

// GetSecretFilesForServiceParams defines parameters for GetSecretFilesForService.
type GetSecretFilesForServiceParams struct {
	// Cursor Cursor to begin retrieving entries for this query
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit Max number of items that can be returned
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// UpdateSecretFilesForServiceJSONBody defines parameters for UpdateSecretFilesForService.
type UpdateSecretFilesForServiceJSONBody = []SecretFileInput

// AddOrUpdateSecretFileJSONBody defines parameters for AddOrUpdateSecretFile.
type AddOrUpdateSecretFileJSONBody struct {
	Content *string `json:"content,omitempty"`
}

// AddDiskJSONRequestBody defines body for AddDisk for application/json ContentType.
type AddDiskJSONRequestBody = DiskPOST

// UpdateDiskJSONRequestBody defines body for UpdateDisk for application/json ContentType.
type UpdateDiskJSONRequestBody = DiskPATCH

// RestoreSnapshotJSONRequestBody defines body for RestoreSnapshot for application/json ContentType.
type RestoreSnapshotJSONRequestBody = SnapshotRestorePOST

// CreateEnvGroupJSONRequestBody defines body for CreateEnvGroup for application/json ContentType.
type CreateEnvGroupJSONRequestBody = EnvGroupPOSTInput

// UpdateEnvGroupJSONRequestBody defines body for UpdateEnvGroup for application/json ContentType.
type UpdateEnvGroupJSONRequestBody = EnvGroupPATCHInput

// UpdateEnvGroupEnvVarJSONRequestBody defines body for UpdateEnvGroupEnvVar for application/json ContentType.
type UpdateEnvGroupEnvVarJSONRequestBody = EnvVarInput

// UpdateEnvGroupSecretFileJSONRequestBody defines body for UpdateEnvGroupSecretFile for application/json ContentType.
type UpdateEnvGroupSecretFileJSONRequestBody UpdateEnvGroupSecretFileJSONBody

// CreateEnvironmentJSONRequestBody defines body for CreateEnvironment for application/json ContentType.
type CreateEnvironmentJSONRequestBody = EnvironmentPOSTInput

// UpdateEnvironmentJSONRequestBody defines body for UpdateEnvironment for application/json ContentType.
type UpdateEnvironmentJSONRequestBody = EnvironmentPATCHInput

// AddResourcesToEnvironmentJSONRequestBody defines body for AddResourcesToEnvironment for application/json ContentType.
type AddResourcesToEnvironmentJSONRequestBody = EnvironmentResourcesPOSTInput

// PatchServiceNotificationOverridesJSONRequestBody defines body for PatchServiceNotificationOverrides for application/json ContentType.
type PatchServiceNotificationOverridesJSONRequestBody = NotificationServiceOverridePATCH

// PatchOwnerNotificationSettingsJSONRequestBody defines body for PatchOwnerNotificationSettings for application/json ContentType.
type PatchOwnerNotificationSettingsJSONRequestBody = NotificationSettingPATCH

// CreatePostgresJSONRequestBody defines body for CreatePostgres for application/json ContentType.
type CreatePostgresJSONRequestBody = PostgresPOSTInput

// UpdatePostgresJSONRequestBody defines body for UpdatePostgres for application/json ContentType.
type UpdatePostgresJSONRequestBody = PostgresPATCHInput

// CreateProjectJSONRequestBody defines body for CreateProject for application/json ContentType.
type CreateProjectJSONRequestBody = ProjectPOSTInput

// UpdateProjectJSONRequestBody defines body for UpdateProject for application/json ContentType.
type UpdateProjectJSONRequestBody = ProjectPATCHInput

// CreateRedisJSONRequestBody defines body for CreateRedis for application/json ContentType.
type CreateRedisJSONRequestBody = RedisPOSTInput

// UpdateRedisJSONRequestBody defines body for UpdateRedis for application/json ContentType.
type UpdateRedisJSONRequestBody = RedisPATCHInput

// CreateRegistryCredentialJSONRequestBody defines body for CreateRegistryCredential for application/json ContentType.
type CreateRegistryCredentialJSONRequestBody CreateRegistryCredentialJSONBody

// UpdateRegistryCredentialJSONRequestBody defines body for UpdateRegistryCredential for application/json ContentType.
type UpdateRegistryCredentialJSONRequestBody UpdateRegistryCredentialJSONBody

// CreateServiceJSONRequestBody defines body for CreateService for application/json ContentType.
type CreateServiceJSONRequestBody = ServicePOST

// UpdateServiceJSONRequestBody defines body for UpdateService for application/json ContentType.
type UpdateServiceJSONRequestBody = ServicePATCH

// AutoscaleServiceJSONRequestBody defines body for AutoscaleService for application/json ContentType.
type AutoscaleServiceJSONRequestBody = AutoscalingConfig

// CreateCustomDomainJSONRequestBody defines body for CreateCustomDomain for application/json ContentType.
type CreateCustomDomainJSONRequestBody CreateCustomDomainJSONBody

// CreateDeployJSONRequestBody defines body for CreateDeploy for application/json ContentType.
type CreateDeployJSONRequestBody CreateDeployJSONBody

// UpdateEnvVarsForServiceJSONRequestBody defines body for UpdateEnvVarsForService for application/json ContentType.
type UpdateEnvVarsForServiceJSONRequestBody = EnvVarInputArray

// UpdateEnvVarJSONRequestBody defines body for UpdateEnvVar for application/json ContentType.
type UpdateEnvVarJSONRequestBody = AddUpdateEnvVarInput

// AddHeadersJSONRequestBody defines body for AddHeaders for application/json ContentType.
type AddHeadersJSONRequestBody = HeaderInput

// UpdateHeadersJSONRequestBody defines body for UpdateHeaders for application/json ContentType.
type UpdateHeadersJSONRequestBody = UpdateHeadersJSONBody

// PostJobJSONRequestBody defines body for PostJob for application/json ContentType.
type PostJobJSONRequestBody PostJobJSONBody

// PreviewServiceJSONRequestBody defines body for PreviewService for application/json ContentType.
type PreviewServiceJSONRequestBody = PreviewInput

// RollbackDeployJSONRequestBody defines body for RollbackDeploy for application/json ContentType.
type RollbackDeployJSONRequestBody RollbackDeployJSONBody

// PatchRouteJSONRequestBody defines body for PatchRoute for application/json ContentType.
type PatchRouteJSONRequestBody = RoutePatch

// AddRouteJSONRequestBody defines body for AddRoute for application/json ContentType.
type AddRouteJSONRequestBody = RoutePost

// PutRoutesJSONRequestBody defines body for PutRoutes for application/json ContentType.
type PutRoutesJSONRequestBody = PutRoutesJSONBody

// ScaleServiceJSONRequestBody defines body for ScaleService for application/json ContentType.
type ScaleServiceJSONRequestBody ScaleServiceJSONBody

// UpdateSecretFilesForServiceJSONRequestBody defines body for UpdateSecretFilesForService for application/json ContentType.
type UpdateSecretFilesForServiceJSONRequestBody = UpdateSecretFilesForServiceJSONBody

// AddOrUpdateSecretFileJSONRequestBody defines body for AddOrUpdateSecretFile for application/json ContentType.
type AddOrUpdateSecretFileJSONRequestBody AddOrUpdateSecretFileJSONBody

// AsEnvVarValue returns the union data inside the AddUpdateEnvVarInput as a EnvVarValue
func (t AddUpdateEnvVarInput) AsEnvVarValue() (EnvVarValue, error) {
	var body EnvVarValue
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEnvVarValue overwrites any union data inside the AddUpdateEnvVarInput as the provided EnvVarValue
func (t *AddUpdateEnvVarInput) FromEnvVarValue(v EnvVarValue) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEnvVarValue performs a merge with any union data inside the AddUpdateEnvVarInput, using the provided EnvVarValue
func (t *AddUpdateEnvVarInput) MergeEnvVarValue(v EnvVarValue) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEnvVarGenerateValue returns the union data inside the AddUpdateEnvVarInput as a EnvVarGenerateValue
func (t AddUpdateEnvVarInput) AsEnvVarGenerateValue() (EnvVarGenerateValue, error) {
	var body EnvVarGenerateValue
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEnvVarGenerateValue overwrites any union data inside the AddUpdateEnvVarInput as the provided EnvVarGenerateValue
func (t *AddUpdateEnvVarInput) FromEnvVarGenerateValue(v EnvVarGenerateValue) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEnvVarGenerateValue performs a merge with any union data inside the AddUpdateEnvVarInput, using the provided EnvVarGenerateValue
func (t *AddUpdateEnvVarInput) MergeEnvVarGenerateValue(v EnvVarGenerateValue) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t AddUpdateEnvVarInput) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *AddUpdateEnvVarInput) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsDockerDetails returns the union data inside the EnvSpecificDetails as a DockerDetails
func (t EnvSpecificDetails) AsDockerDetails() (DockerDetails, error) {
	var body DockerDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDockerDetails overwrites any union data inside the EnvSpecificDetails as the provided DockerDetails
func (t *EnvSpecificDetails) FromDockerDetails(v DockerDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDockerDetails performs a merge with any union data inside the EnvSpecificDetails, using the provided DockerDetails
func (t *EnvSpecificDetails) MergeDockerDetails(v DockerDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsNativeEnvironmentDetails returns the union data inside the EnvSpecificDetails as a NativeEnvironmentDetails
func (t EnvSpecificDetails) AsNativeEnvironmentDetails() (NativeEnvironmentDetails, error) {
	var body NativeEnvironmentDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromNativeEnvironmentDetails overwrites any union data inside the EnvSpecificDetails as the provided NativeEnvironmentDetails
func (t *EnvSpecificDetails) FromNativeEnvironmentDetails(v NativeEnvironmentDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeNativeEnvironmentDetails performs a merge with any union data inside the EnvSpecificDetails, using the provided NativeEnvironmentDetails
func (t *EnvSpecificDetails) MergeNativeEnvironmentDetails(v NativeEnvironmentDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EnvSpecificDetails) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EnvSpecificDetails) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsDockerDetailsPATCH returns the union data inside the EnvSpecificDetailsPATCH as a DockerDetailsPATCH
func (t EnvSpecificDetailsPATCH) AsDockerDetailsPATCH() (DockerDetailsPATCH, error) {
	var body DockerDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDockerDetailsPATCH overwrites any union data inside the EnvSpecificDetailsPATCH as the provided DockerDetailsPATCH
func (t *EnvSpecificDetailsPATCH) FromDockerDetailsPATCH(v DockerDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDockerDetailsPATCH performs a merge with any union data inside the EnvSpecificDetailsPATCH, using the provided DockerDetailsPATCH
func (t *EnvSpecificDetailsPATCH) MergeDockerDetailsPATCH(v DockerDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsNativeEnvironmentDetailsPATCH returns the union data inside the EnvSpecificDetailsPATCH as a NativeEnvironmentDetailsPATCH
func (t EnvSpecificDetailsPATCH) AsNativeEnvironmentDetailsPATCH() (NativeEnvironmentDetailsPATCH, error) {
	var body NativeEnvironmentDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromNativeEnvironmentDetailsPATCH overwrites any union data inside the EnvSpecificDetailsPATCH as the provided NativeEnvironmentDetailsPATCH
func (t *EnvSpecificDetailsPATCH) FromNativeEnvironmentDetailsPATCH(v NativeEnvironmentDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeNativeEnvironmentDetailsPATCH performs a merge with any union data inside the EnvSpecificDetailsPATCH, using the provided NativeEnvironmentDetailsPATCH
func (t *EnvSpecificDetailsPATCH) MergeNativeEnvironmentDetailsPATCH(v NativeEnvironmentDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EnvSpecificDetailsPATCH) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EnvSpecificDetailsPATCH) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsDockerDetailsPOST returns the union data inside the EnvSpecificDetailsPOST as a DockerDetailsPOST
func (t EnvSpecificDetailsPOST) AsDockerDetailsPOST() (DockerDetailsPOST, error) {
	var body DockerDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDockerDetailsPOST overwrites any union data inside the EnvSpecificDetailsPOST as the provided DockerDetailsPOST
func (t *EnvSpecificDetailsPOST) FromDockerDetailsPOST(v DockerDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDockerDetailsPOST performs a merge with any union data inside the EnvSpecificDetailsPOST, using the provided DockerDetailsPOST
func (t *EnvSpecificDetailsPOST) MergeDockerDetailsPOST(v DockerDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsNativeEnvironmentDetailsPOST returns the union data inside the EnvSpecificDetailsPOST as a NativeEnvironmentDetailsPOST
func (t EnvSpecificDetailsPOST) AsNativeEnvironmentDetailsPOST() (NativeEnvironmentDetailsPOST, error) {
	var body NativeEnvironmentDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromNativeEnvironmentDetailsPOST overwrites any union data inside the EnvSpecificDetailsPOST as the provided NativeEnvironmentDetailsPOST
func (t *EnvSpecificDetailsPOST) FromNativeEnvironmentDetailsPOST(v NativeEnvironmentDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeNativeEnvironmentDetailsPOST performs a merge with any union data inside the EnvSpecificDetailsPOST, using the provided NativeEnvironmentDetailsPOST
func (t *EnvSpecificDetailsPOST) MergeNativeEnvironmentDetailsPOST(v NativeEnvironmentDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EnvSpecificDetailsPOST) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EnvSpecificDetailsPOST) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsEnvVarKeyValue returns the union data inside the EnvVarInput as a EnvVarKeyValue
func (t EnvVarInput) AsEnvVarKeyValue() (EnvVarKeyValue, error) {
	var body EnvVarKeyValue
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEnvVarKeyValue overwrites any union data inside the EnvVarInput as the provided EnvVarKeyValue
func (t *EnvVarInput) FromEnvVarKeyValue(v EnvVarKeyValue) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEnvVarKeyValue performs a merge with any union data inside the EnvVarInput, using the provided EnvVarKeyValue
func (t *EnvVarInput) MergeEnvVarKeyValue(v EnvVarKeyValue) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEnvVarKeyGenerateValue returns the union data inside the EnvVarInput as a EnvVarKeyGenerateValue
func (t EnvVarInput) AsEnvVarKeyGenerateValue() (EnvVarKeyGenerateValue, error) {
	var body EnvVarKeyGenerateValue
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEnvVarKeyGenerateValue overwrites any union data inside the EnvVarInput as the provided EnvVarKeyGenerateValue
func (t *EnvVarInput) FromEnvVarKeyGenerateValue(v EnvVarKeyGenerateValue) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEnvVarKeyGenerateValue performs a merge with any union data inside the EnvVarInput, using the provided EnvVarKeyGenerateValue
func (t *EnvVarInput) MergeEnvVarKeyGenerateValue(v EnvVarKeyGenerateValue) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EnvVarInput) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EnvVarInput) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsStaticSiteDetails returns the union data inside the Service_ServiceDetails as a StaticSiteDetails
func (t Service_ServiceDetails) AsStaticSiteDetails() (StaticSiteDetails, error) {
	var body StaticSiteDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStaticSiteDetails overwrites any union data inside the Service_ServiceDetails as the provided StaticSiteDetails
func (t *Service_ServiceDetails) FromStaticSiteDetails(v StaticSiteDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStaticSiteDetails performs a merge with any union data inside the Service_ServiceDetails, using the provided StaticSiteDetails
func (t *Service_ServiceDetails) MergeStaticSiteDetails(v StaticSiteDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsWebServiceDetails returns the union data inside the Service_ServiceDetails as a WebServiceDetails
func (t Service_ServiceDetails) AsWebServiceDetails() (WebServiceDetails, error) {
	var body WebServiceDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWebServiceDetails overwrites any union data inside the Service_ServiceDetails as the provided WebServiceDetails
func (t *Service_ServiceDetails) FromWebServiceDetails(v WebServiceDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWebServiceDetails performs a merge with any union data inside the Service_ServiceDetails, using the provided WebServiceDetails
func (t *Service_ServiceDetails) MergeWebServiceDetails(v WebServiceDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPrivateServiceDetails returns the union data inside the Service_ServiceDetails as a PrivateServiceDetails
func (t Service_ServiceDetails) AsPrivateServiceDetails() (PrivateServiceDetails, error) {
	var body PrivateServiceDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPrivateServiceDetails overwrites any union data inside the Service_ServiceDetails as the provided PrivateServiceDetails
func (t *Service_ServiceDetails) FromPrivateServiceDetails(v PrivateServiceDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePrivateServiceDetails performs a merge with any union data inside the Service_ServiceDetails, using the provided PrivateServiceDetails
func (t *Service_ServiceDetails) MergePrivateServiceDetails(v PrivateServiceDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsBackgroundWorkerDetails returns the union data inside the Service_ServiceDetails as a BackgroundWorkerDetails
func (t Service_ServiceDetails) AsBackgroundWorkerDetails() (BackgroundWorkerDetails, error) {
	var body BackgroundWorkerDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBackgroundWorkerDetails overwrites any union data inside the Service_ServiceDetails as the provided BackgroundWorkerDetails
func (t *Service_ServiceDetails) FromBackgroundWorkerDetails(v BackgroundWorkerDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBackgroundWorkerDetails performs a merge with any union data inside the Service_ServiceDetails, using the provided BackgroundWorkerDetails
func (t *Service_ServiceDetails) MergeBackgroundWorkerDetails(v BackgroundWorkerDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCronJobDetails returns the union data inside the Service_ServiceDetails as a CronJobDetails
func (t Service_ServiceDetails) AsCronJobDetails() (CronJobDetails, error) {
	var body CronJobDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCronJobDetails overwrites any union data inside the Service_ServiceDetails as the provided CronJobDetails
func (t *Service_ServiceDetails) FromCronJobDetails(v CronJobDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCronJobDetails performs a merge with any union data inside the Service_ServiceDetails, using the provided CronJobDetails
func (t *Service_ServiceDetails) MergeCronJobDetails(v CronJobDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t Service_ServiceDetails) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *Service_ServiceDetails) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsStaticSiteDetailsPATCH returns the union data inside the ServicePATCH_ServiceDetails as a StaticSiteDetailsPATCH
func (t ServicePATCH_ServiceDetails) AsStaticSiteDetailsPATCH() (StaticSiteDetailsPATCH, error) {
	var body StaticSiteDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStaticSiteDetailsPATCH overwrites any union data inside the ServicePATCH_ServiceDetails as the provided StaticSiteDetailsPATCH
func (t *ServicePATCH_ServiceDetails) FromStaticSiteDetailsPATCH(v StaticSiteDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStaticSiteDetailsPATCH performs a merge with any union data inside the ServicePATCH_ServiceDetails, using the provided StaticSiteDetailsPATCH
func (t *ServicePATCH_ServiceDetails) MergeStaticSiteDetailsPATCH(v StaticSiteDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsWebServiceDetailsPATCH returns the union data inside the ServicePATCH_ServiceDetails as a WebServiceDetailsPATCH
func (t ServicePATCH_ServiceDetails) AsWebServiceDetailsPATCH() (WebServiceDetailsPATCH, error) {
	var body WebServiceDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWebServiceDetailsPATCH overwrites any union data inside the ServicePATCH_ServiceDetails as the provided WebServiceDetailsPATCH
func (t *ServicePATCH_ServiceDetails) FromWebServiceDetailsPATCH(v WebServiceDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWebServiceDetailsPATCH performs a merge with any union data inside the ServicePATCH_ServiceDetails, using the provided WebServiceDetailsPATCH
func (t *ServicePATCH_ServiceDetails) MergeWebServiceDetailsPATCH(v WebServiceDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPrivateServiceDetailsPATCH returns the union data inside the ServicePATCH_ServiceDetails as a PrivateServiceDetailsPATCH
func (t ServicePATCH_ServiceDetails) AsPrivateServiceDetailsPATCH() (PrivateServiceDetailsPATCH, error) {
	var body PrivateServiceDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPrivateServiceDetailsPATCH overwrites any union data inside the ServicePATCH_ServiceDetails as the provided PrivateServiceDetailsPATCH
func (t *ServicePATCH_ServiceDetails) FromPrivateServiceDetailsPATCH(v PrivateServiceDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePrivateServiceDetailsPATCH performs a merge with any union data inside the ServicePATCH_ServiceDetails, using the provided PrivateServiceDetailsPATCH
func (t *ServicePATCH_ServiceDetails) MergePrivateServiceDetailsPATCH(v PrivateServiceDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsBackgroundWorkerDetailsPATCH returns the union data inside the ServicePATCH_ServiceDetails as a BackgroundWorkerDetailsPATCH
func (t ServicePATCH_ServiceDetails) AsBackgroundWorkerDetailsPATCH() (BackgroundWorkerDetailsPATCH, error) {
	var body BackgroundWorkerDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBackgroundWorkerDetailsPATCH overwrites any union data inside the ServicePATCH_ServiceDetails as the provided BackgroundWorkerDetailsPATCH
func (t *ServicePATCH_ServiceDetails) FromBackgroundWorkerDetailsPATCH(v BackgroundWorkerDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBackgroundWorkerDetailsPATCH performs a merge with any union data inside the ServicePATCH_ServiceDetails, using the provided BackgroundWorkerDetailsPATCH
func (t *ServicePATCH_ServiceDetails) MergeBackgroundWorkerDetailsPATCH(v BackgroundWorkerDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCronJobDetailsPATCH returns the union data inside the ServicePATCH_ServiceDetails as a CronJobDetailsPATCH
func (t ServicePATCH_ServiceDetails) AsCronJobDetailsPATCH() (CronJobDetailsPATCH, error) {
	var body CronJobDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCronJobDetailsPATCH overwrites any union data inside the ServicePATCH_ServiceDetails as the provided CronJobDetailsPATCH
func (t *ServicePATCH_ServiceDetails) FromCronJobDetailsPATCH(v CronJobDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCronJobDetailsPATCH performs a merge with any union data inside the ServicePATCH_ServiceDetails, using the provided CronJobDetailsPATCH
func (t *ServicePATCH_ServiceDetails) MergeCronJobDetailsPATCH(v CronJobDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ServicePATCH_ServiceDetails) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ServicePATCH_ServiceDetails) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsStaticSiteDetailsPOST returns the union data inside the ServicePOST_ServiceDetails as a StaticSiteDetailsPOST
func (t ServicePOST_ServiceDetails) AsStaticSiteDetailsPOST() (StaticSiteDetailsPOST, error) {
	var body StaticSiteDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStaticSiteDetailsPOST overwrites any union data inside the ServicePOST_ServiceDetails as the provided StaticSiteDetailsPOST
func (t *ServicePOST_ServiceDetails) FromStaticSiteDetailsPOST(v StaticSiteDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStaticSiteDetailsPOST performs a merge with any union data inside the ServicePOST_ServiceDetails, using the provided StaticSiteDetailsPOST
func (t *ServicePOST_ServiceDetails) MergeStaticSiteDetailsPOST(v StaticSiteDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsWebServiceDetailsPOST returns the union data inside the ServicePOST_ServiceDetails as a WebServiceDetailsPOST
func (t ServicePOST_ServiceDetails) AsWebServiceDetailsPOST() (WebServiceDetailsPOST, error) {
	var body WebServiceDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWebServiceDetailsPOST overwrites any union data inside the ServicePOST_ServiceDetails as the provided WebServiceDetailsPOST
func (t *ServicePOST_ServiceDetails) FromWebServiceDetailsPOST(v WebServiceDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWebServiceDetailsPOST performs a merge with any union data inside the ServicePOST_ServiceDetails, using the provided WebServiceDetailsPOST
func (t *ServicePOST_ServiceDetails) MergeWebServiceDetailsPOST(v WebServiceDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPrivateServiceDetailsPOST returns the union data inside the ServicePOST_ServiceDetails as a PrivateServiceDetailsPOST
func (t ServicePOST_ServiceDetails) AsPrivateServiceDetailsPOST() (PrivateServiceDetailsPOST, error) {
	var body PrivateServiceDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPrivateServiceDetailsPOST overwrites any union data inside the ServicePOST_ServiceDetails as the provided PrivateServiceDetailsPOST
func (t *ServicePOST_ServiceDetails) FromPrivateServiceDetailsPOST(v PrivateServiceDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePrivateServiceDetailsPOST performs a merge with any union data inside the ServicePOST_ServiceDetails, using the provided PrivateServiceDetailsPOST
func (t *ServicePOST_ServiceDetails) MergePrivateServiceDetailsPOST(v PrivateServiceDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsBackgroundWorkerDetailsPOST returns the union data inside the ServicePOST_ServiceDetails as a BackgroundWorkerDetailsPOST
func (t ServicePOST_ServiceDetails) AsBackgroundWorkerDetailsPOST() (BackgroundWorkerDetailsPOST, error) {
	var body BackgroundWorkerDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBackgroundWorkerDetailsPOST overwrites any union data inside the ServicePOST_ServiceDetails as the provided BackgroundWorkerDetailsPOST
func (t *ServicePOST_ServiceDetails) FromBackgroundWorkerDetailsPOST(v BackgroundWorkerDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBackgroundWorkerDetailsPOST performs a merge with any union data inside the ServicePOST_ServiceDetails, using the provided BackgroundWorkerDetailsPOST
func (t *ServicePOST_ServiceDetails) MergeBackgroundWorkerDetailsPOST(v BackgroundWorkerDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCronJobDetailsPOST returns the union data inside the ServicePOST_ServiceDetails as a CronJobDetailsPOST
func (t ServicePOST_ServiceDetails) AsCronJobDetailsPOST() (CronJobDetailsPOST, error) {
	var body CronJobDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCronJobDetailsPOST overwrites any union data inside the ServicePOST_ServiceDetails as the provided CronJobDetailsPOST
func (t *ServicePOST_ServiceDetails) FromCronJobDetailsPOST(v CronJobDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCronJobDetailsPOST performs a merge with any union data inside the ServicePOST_ServiceDetails, using the provided CronJobDetailsPOST
func (t *ServicePOST_ServiceDetails) MergeCronJobDetailsPOST(v CronJobDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ServicePOST_ServiceDetails) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ServicePOST_ServiceDetails) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
